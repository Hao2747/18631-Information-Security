
vuln(4):     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 03                	add    %al,(%ebx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 02                	add    %al,(%edx)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 00                	add    %al,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 0f                	add    %cl,(%edi)
 8048199:	b4 0b                	mov    $0xb,%ah
 804819b:	cc                   	int3   
 804819c:	e5 b5                	in     $0xb5,%eax
 804819e:	be 7d 4c 6a 97       	mov    $0x976a4c7d,%esi
 80481a3:	1e                   	push   %ds
 80481a4:	17                   	pop    %ss
 80481a5:	80 dd 9d             	sbb    $0x9d,%ch
 80481a8:	f2                   	repnz
 80481a9:	f6                   	.byte 0xf6
 80481aa:	98                   	cwtl   
 80481ab:	a5                   	movsl  %ds:(%esi),%es:(%edi)

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0b 00                	or     (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0b                	add    %cl,(%ebx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x208>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	2b 00                	sub    (%eax),%eax
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	1f                   	pop    %ds
	...
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 12                	add    %dl,(%edx)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 1a                	add    %bl,(%edx)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 4a 00             	add    %cl,0x0(%edx)
	...
 8048216:	00 00                	add    %al,(%eax)
 8048218:	12 00                	adc    (%eax),%al
 804821a:	00 00                	add    %al,(%eax)
 804821c:	26 00 00             	add    %al,%es:(%eax)
	...
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 43 00             	add    %al,0x0(%ebx)
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	12 00                	adc    (%eax),%al
 804823a:	00 00                	add    %al,(%eax)
 804823c:	6e                   	outsb  %ds:(%esi),(%dx)
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 20                	add    %ah,(%eax)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 52 00             	add    %dl,0x0(%edx)
	...
 8048256:	00 00                	add    %al,(%eax)
 8048258:	12 00                	adc    (%eax),%al
 804825a:	00 00                	add    %al,(%eax)
 804825c:	32 00                	xor    (%eax),%al
	...
 8048266:	00 00                	add    %al,(%eax)
 8048268:	11 00                	adc    %eax,(%eax)
 804826a:	00 00                	add    %al,(%eax)
 804826c:	39 00                	cmp    %eax,(%eax)
	...
 8048276:	00 00                	add    %al,(%eax)
 8048278:	12 00                	adc    (%eax),%al
 804827a:	00 00                	add    %al,(%eax)
 804827c:	0b 00                	or     (%eax),%eax
 804827e:	00 00                	add    %al,(%eax)
 8048280:	cc                   	int3   
 8048281:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048284:	04 00                	add    $0x0,%al
 8048286:	00 00                	add    %al,(%eax)
 8048288:	11 00                	adc    %eax,(%eax)
 804828a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804828c <.dynstr>:
 804828c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048290:	63 2e                	arpl   %bp,(%esi)
 8048292:	73 6f                	jae    8048303 <_init-0x91>
 8048294:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048299:	4f                   	dec    %edi
 804829a:	5f                   	pop    %edi
 804829b:	73 74                	jae    8048311 <_init-0x83>
 804829d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80482a4:	64 
 80482a5:	00 67 65             	add    %ah,0x65(%edi)
 80482a8:	74 73                	je     804831d <_init-0x77>
 80482aa:	00 66 66             	add    %ah,0x66(%esi)
 80482ad:	6c                   	insb   (%dx),%es:(%edi)
 80482ae:	75 73                	jne    8048323 <_init-0x71>
 80482b0:	68 00 70 75 74       	push   $0x74757000
 80482b5:	73 00                	jae    80482b7 <_init-0xdd>
 80482b7:	70 72                	jo     804832b <_init-0x69>
 80482b9:	69 6e 74 66 00 73 74 	imul   $0x74730066,0x74(%esi),%ebp
 80482c0:	64 6f                	outsl  %fs:(%esi),(%dx)
 80482c2:	75 74                	jne    8048338 <_init-0x5c>
 80482c4:	00 73 65             	add    %dh,0x65(%ebx)
 80482c7:	74 72                	je     804833b <_init-0x59>
 80482c9:	65 73 67             	gs jae 8048333 <_init-0x61>
 80482cc:	69 64 00 73 79 73 74 	imul   $0x65747379,0x73(%eax,%eax,1),%esp
 80482d3:	65 
 80482d4:	6d                   	insl   (%dx),%es:(%edi)
 80482d5:	00 67 65             	add    %ah,0x65(%edi)
 80482d8:	74 65                	je     804833f <_init-0x55>
 80482da:	67 69 64 00 5f 5f 6c 	imul   $0x696c5f5f,0x0(%si),%esp
 80482e1:	69 
 80482e2:	62 63 5f             	bound  %esp,0x5f(%ebx)
 80482e5:	73 74                	jae    804835b <_init-0x39>
 80482e7:	61                   	popa   
 80482e8:	72 74                	jb     804835e <_init-0x36>
 80482ea:	5f                   	pop    %edi
 80482eb:	6d                   	insl   (%dx),%es:(%edi)
 80482ec:	61                   	popa   
 80482ed:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 80482f4:	43                   	inc    %ebx
 80482f5:	5f                   	pop    %edi
 80482f6:	32 2e                	xor    (%esi),%ch
 80482f8:	30 00                	xor    %al,(%eax)
 80482fa:	5f                   	pop    %edi
 80482fb:	5f                   	pop    %edi
 80482fc:	67 6d                	insl   (%dx),%es:(%di)
 80482fe:	6f                   	outsl  %ds:(%esi),(%dx)
 80482ff:	6e                   	outsb  %ds:(%esi),(%dx)
 8048300:	5f                   	pop    %edi
 8048301:	73 74                	jae    8048377 <_init-0x1d>
 8048303:	61                   	popa   
 8048304:	72 74                	jb     804837a <_init-0x1a>
 8048306:	5f                   	pop    %edi
 8048307:	5f                   	pop    %edi
	...

Disassembly of section .gnu.version:

0804830a <.gnu.version>:
 804830a:	00 00                	add    %al,(%eax)
 804830c:	02 00                	add    (%eax),%al
 804830e:	02 00                	add    (%eax),%al
 8048310:	02 00                	add    (%eax),%al
 8048312:	02 00                	add    (%eax),%al
 8048314:	02 00                	add    (%eax),%al
 8048316:	02 00                	add    (%eax),%al
 8048318:	00 00                	add    %al,(%eax)
 804831a:	02 00                	add    (%eax),%al
 804831c:	02 00                	add    (%eax),%al
 804831e:	02 00                	add    (%eax),%al
 8048320:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048324 <.gnu.version_r>:
 8048324:	01 00                	add    %eax,(%eax)
 8048326:	01 00                	add    %eax,(%eax)
 8048328:	01 00                	add    %eax,(%eax)
 804832a:	00 00                	add    %al,(%eax)
 804832c:	10 00                	adc    %al,(%eax)
 804832e:	00 00                	add    %al,(%eax)
 8048330:	00 00                	add    %al,(%eax)
 8048332:	00 00                	add    %al,(%eax)
 8048334:	10 69 69             	adc    %ch,0x69(%ecx)
 8048337:	0d 00 00 02 00       	or     $0x20000,%eax
 804833c:	64 00 00             	add    %al,%fs:(%eax)
 804833f:	00 00                	add    %al,(%eax)
 8048341:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048344 <.rel.dyn>:
 8048344:	f8                   	clc    
 8048345:	9f                   	lahf   
 8048346:	04 08                	add    $0x8,%al
 8048348:	06                   	push   %es
 8048349:	07                   	pop    %es
 804834a:	00 00                	add    %al,(%eax)
 804834c:	fc                   	cld    
 804834d:	9f                   	lahf   
 804834e:	04 08                	add    $0x8,%al
 8048350:	06                   	push   %es
 8048351:	09 00                	or     %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048354 <.rel.plt>:
 8048354:	0c a0                	or     $0xa0,%al
 8048356:	04 08                	add    $0x8,%al
 8048358:	07                   	pop    %es
 8048359:	01 00                	add    %eax,(%eax)
 804835b:	00 10                	add    %dl,(%eax)
 804835d:	a0 04 08 07 02       	mov    0x2070804,%al
 8048362:	00 00                	add    %al,(%eax)
 8048364:	14 a0                	adc    $0xa0,%al
 8048366:	04 08                	add    $0x8,%al
 8048368:	07                   	pop    %es
 8048369:	03 00                	add    (%eax),%eax
 804836b:	00 18                	add    %bl,(%eax)
 804836d:	a0 04 08 07 04       	mov    0x4070804,%al
 8048372:	00 00                	add    %al,(%eax)
 8048374:	1c a0                	sbb    $0xa0,%al
 8048376:	04 08                	add    $0x8,%al
 8048378:	07                   	pop    %es
 8048379:	05 00 00 20 a0       	add    $0xa0200000,%eax
 804837e:	04 08                	add    $0x8,%al
 8048380:	07                   	pop    %es
 8048381:	06                   	push   %es
 8048382:	00 00                	add    %al,(%eax)
 8048384:	24 a0                	and    $0xa0,%al
 8048386:	04 08                	add    $0x8,%al
 8048388:	07                   	pop    %es
 8048389:	08 00                	or     %al,(%eax)
 804838b:	00 28                	add    %ch,(%eax)
 804838d:	a0 04 08 07 0a       	mov    0xa070804,%al
	...

Disassembly of section .init:

08048394 <_init>:
 8048394:	53                   	push   %ebx
 8048395:	83 ec 08             	sub    $0x8,%esp
 8048398:	e8 13 01 00 00       	call   80484b0 <__x86.get_pc_thunk.bx>
 804839d:	81 c3 63 1c 00 00    	add    $0x1c63,%ebx
 80483a3:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
 80483a9:	85 c0                	test   %eax,%eax
 80483ab:	74 05                	je     80483b2 <_init+0x1e>
 80483ad:	e8 9e 00 00 00       	call   8048450 <.plt.got>
 80483b2:	83 c4 08             	add    $0x8,%esp
 80483b5:	5b                   	pop    %ebx
 80483b6:	c3                   	ret    

Disassembly of section .plt:

080483c0 <.plt>:
 80483c0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483c6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483cc:	00 00                	add    %al,(%eax)
	...

080483d0 <printf@plt>:
 80483d0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483d6:	68 00 00 00 00       	push   $0x0
 80483db:	e9 e0 ff ff ff       	jmp    80483c0 <.plt>

080483e0 <fflush@plt>:
 80483e0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483e6:	68 08 00 00 00       	push   $0x8
 80483eb:	e9 d0 ff ff ff       	jmp    80483c0 <.plt>

080483f0 <gets@plt>:
 80483f0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483f6:	68 10 00 00 00       	push   $0x10
 80483fb:	e9 c0 ff ff ff       	jmp    80483c0 <.plt>

08048400 <getegid@plt>:
 8048400:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048406:	68 18 00 00 00       	push   $0x18
 804840b:	e9 b0 ff ff ff       	jmp    80483c0 <.plt>

08048410 <puts@plt>:
 8048410:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048416:	68 20 00 00 00       	push   $0x20
 804841b:	e9 a0 ff ff ff       	jmp    80483c0 <.plt>

08048420 <system@plt>:
 8048420:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048426:	68 28 00 00 00       	push   $0x28
 804842b:	e9 90 ff ff ff       	jmp    80483c0 <.plt>

08048430 <__libc_start_main@plt>:
 8048430:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048436:	68 30 00 00 00       	push   $0x30
 804843b:	e9 80 ff ff ff       	jmp    80483c0 <.plt>

08048440 <setresgid@plt>:
 8048440:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048446:	68 38 00 00 00       	push   $0x38
 804844b:	e9 70 ff ff ff       	jmp    80483c0 <.plt>

Disassembly of section .plt.got:

08048450 <.plt.got>:
 8048450:	ff 25 f8 9f 04 08    	jmp    *0x8049ff8
 8048456:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048460 <_start>:
 8048460:	31 ed                	xor    %ebp,%ebp
 8048462:	5e                   	pop    %esi
 8048463:	89 e1                	mov    %esp,%ecx
 8048465:	83 e4 f0             	and    $0xfffffff0,%esp
 8048468:	50                   	push   %eax
 8048469:	54                   	push   %esp
 804846a:	52                   	push   %edx
 804846b:	e8 23 00 00 00       	call   8048493 <_start+0x33>
 8048470:	81 c3 90 1b 00 00    	add    $0x1b90,%ebx
 8048476:	8d 83 b0 e6 ff ff    	lea    -0x1950(%ebx),%eax
 804847c:	50                   	push   %eax
 804847d:	8d 83 50 e6 ff ff    	lea    -0x19b0(%ebx),%eax
 8048483:	50                   	push   %eax
 8048484:	51                   	push   %ecx
 8048485:	56                   	push   %esi
 8048486:	c7 c0 ef 85 04 08    	mov    $0x80485ef,%eax
 804848c:	50                   	push   %eax
 804848d:	e8 9e ff ff ff       	call   8048430 <__libc_start_main@plt>
 8048492:	f4                   	hlt    
 8048493:	8b 1c 24             	mov    (%esp),%ebx
 8048496:	c3                   	ret    
 8048497:	66 90                	xchg   %ax,%ax
 8048499:	66 90                	xchg   %ax,%ax
 804849b:	66 90                	xchg   %ax,%ax
 804849d:	66 90                	xchg   %ax,%ax
 804849f:	90                   	nop

080484a0 <_dl_relocate_static_pie>:
 80484a0:	f3 c3                	repz ret 
 80484a2:	66 90                	xchg   %ax,%ax
 80484a4:	66 90                	xchg   %ax,%ax
 80484a6:	66 90                	xchg   %ax,%ax
 80484a8:	66 90                	xchg   %ax,%ax
 80484aa:	66 90                	xchg   %ax,%ax
 80484ac:	66 90                	xchg   %ax,%ax
 80484ae:	66 90                	xchg   %ax,%ax

080484b0 <__x86.get_pc_thunk.bx>:
 80484b0:	8b 1c 24             	mov    (%esp),%ebx
 80484b3:	c3                   	ret    
 80484b4:	66 90                	xchg   %ax,%ax
 80484b6:	66 90                	xchg   %ax,%ax
 80484b8:	66 90                	xchg   %ax,%ax
 80484ba:	66 90                	xchg   %ax,%ax
 80484bc:	66 90                	xchg   %ax,%ax
 80484be:	66 90                	xchg   %ax,%ax

080484c0 <deregister_tm_clones>:
 80484c0:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 80484c5:	3d 34 a0 04 08       	cmp    $0x804a034,%eax
 80484ca:	74 24                	je     80484f0 <deregister_tm_clones+0x30>
 80484cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80484d1:	85 c0                	test   %eax,%eax
 80484d3:	74 1b                	je     80484f0 <deregister_tm_clones+0x30>
 80484d5:	55                   	push   %ebp
 80484d6:	89 e5                	mov    %esp,%ebp
 80484d8:	83 ec 14             	sub    $0x14,%esp
 80484db:	68 34 a0 04 08       	push   $0x804a034
 80484e0:	ff d0                	call   *%eax
 80484e2:	83 c4 10             	add    $0x10,%esp
 80484e5:	c9                   	leave  
 80484e6:	c3                   	ret    
 80484e7:	89 f6                	mov    %esi,%esi
 80484e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 80484f0:	f3 c3                	repz ret 
 80484f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80484f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048500 <register_tm_clones>:
 8048500:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 8048505:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804850a:	c1 f8 02             	sar    $0x2,%eax
 804850d:	89 c2                	mov    %eax,%edx
 804850f:	c1 ea 1f             	shr    $0x1f,%edx
 8048512:	01 d0                	add    %edx,%eax
 8048514:	d1 f8                	sar    %eax
 8048516:	74 20                	je     8048538 <register_tm_clones+0x38>
 8048518:	ba 00 00 00 00       	mov    $0x0,%edx
 804851d:	85 d2                	test   %edx,%edx
 804851f:	74 17                	je     8048538 <register_tm_clones+0x38>
 8048521:	55                   	push   %ebp
 8048522:	89 e5                	mov    %esp,%ebp
 8048524:	83 ec 10             	sub    $0x10,%esp
 8048527:	50                   	push   %eax
 8048528:	68 34 a0 04 08       	push   $0x804a034
 804852d:	ff d2                	call   *%edx
 804852f:	83 c4 10             	add    $0x10,%esp
 8048532:	c9                   	leave  
 8048533:	c3                   	ret    
 8048534:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048538:	f3 c3                	repz ret 
 804853a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048540 <__do_global_dtors_aux>:
 8048540:	80 3d 34 a0 04 08 00 	cmpb   $0x0,0x804a034
 8048547:	75 17                	jne    8048560 <__do_global_dtors_aux+0x20>
 8048549:	55                   	push   %ebp
 804854a:	89 e5                	mov    %esp,%ebp
 804854c:	83 ec 08             	sub    $0x8,%esp
 804854f:	e8 6c ff ff ff       	call   80484c0 <deregister_tm_clones>
 8048554:	c6 05 34 a0 04 08 01 	movb   $0x1,0x804a034
 804855b:	c9                   	leave  
 804855c:	c3                   	ret    
 804855d:	8d 76 00             	lea    0x0(%esi),%esi
 8048560:	f3 c3                	repz ret 
 8048562:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048569:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048570 <frame_dummy>:
 8048570:	55                   	push   %ebp
 8048571:	89 e5                	mov    %esp,%ebp
 8048573:	5d                   	pop    %ebp
 8048574:	eb 8a                	jmp    8048500 <register_tm_clones>

08048576 <vuln>:
 8048576:	57                   	push   %edi
 8048577:	56                   	push   %esi
 8048578:	53                   	push   %ebx
 8048579:	81 ec a8 00 00 00    	sub    $0xa8,%esp
 804857f:	e8 2c ff ff ff       	call   80484b0 <__x86.get_pc_thunk.bx>
 8048584:	81 c3 7c 1a 00 00    	add    $0x1a7c,%ebx
 804858a:	8d 74 24 14          	lea    0x14(%esp),%esi
 804858e:	56                   	push   %esi
 804858f:	8d 83 d0 e6 ff ff    	lea    -0x1930(%ebx),%eax
 8048595:	50                   	push   %eax
 8048596:	e8 35 fe ff ff       	call   80483d0 <printf@plt>
 804859b:	83 c4 04             	add    $0x4,%esp
 804859e:	8b bb fc ff ff ff    	mov    -0x4(%ebx),%edi
 80485a4:	ff 37                	pushl  (%edi)
 80485a6:	e8 35 fe ff ff       	call   80483e0 <fflush@plt>
 80485ab:	89 34 24             	mov    %esi,(%esp)
 80485ae:	e8 3d fe ff ff       	call   80483f0 <gets@plt>
 80485b3:	89 34 24             	mov    %esi,(%esp)
 80485b6:	e8 55 fe ff ff       	call   8048410 <puts@plt>
 80485bb:	83 c4 04             	add    $0x4,%esp
 80485be:	ff 37                	pushl  (%edi)
 80485c0:	e8 1b fe ff ff       	call   80483e0 <fflush@plt>
 80485c5:	81 c4 b0 00 00 00    	add    $0xb0,%esp
 80485cb:	5b                   	pop    %ebx
 80485cc:	5e                   	pop    %esi
 80485cd:	5f                   	pop    %edi
 80485ce:	c3                   	ret    

080485cf <print_prompt>:
 80485cf:	53                   	push   %ebx
 80485d0:	83 ec 14             	sub    $0x14,%esp
 80485d3:	e8 d8 fe ff ff       	call   80484b0 <__x86.get_pc_thunk.bx>
 80485d8:	81 c3 28 1a 00 00    	add    $0x1a28,%ebx
 80485de:	8d 83 fc e6 ff ff    	lea    -0x1904(%ebx),%eax
 80485e4:	50                   	push   %eax
 80485e5:	e8 36 fe ff ff       	call   8048420 <system@plt>
 80485ea:	83 c4 18             	add    $0x18,%esp
 80485ed:	5b                   	pop    %ebx
 80485ee:	c3                   	ret    

080485ef <main>:
 80485ef:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80485f3:	83 e4 f0             	and    $0xfffffff0,%esp
 80485f6:	ff 71 fc             	pushl  -0x4(%ecx)
 80485f9:	55                   	push   %ebp
 80485fa:	89 e5                	mov    %esp,%ebp
 80485fc:	53                   	push   %ebx
 80485fd:	51                   	push   %ecx
 80485fe:	e8 ad fe ff ff       	call   80484b0 <__x86.get_pc_thunk.bx>
 8048603:	81 c3 fd 19 00 00    	add    $0x19fd,%ebx
 8048609:	e8 f2 fd ff ff       	call   8048400 <getegid@plt>
 804860e:	83 ec 04             	sub    $0x4,%esp
 8048611:	50                   	push   %eax
 8048612:	50                   	push   %eax
 8048613:	50                   	push   %eax
 8048614:	e8 27 fe ff ff       	call   8048440 <setresgid@plt>
 8048619:	e8 b1 ff ff ff       	call   80485cf <print_prompt>
 804861e:	83 c4 04             	add    $0x4,%esp
 8048621:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048627:	ff 30                	pushl  (%eax)
 8048629:	e8 b2 fd ff ff       	call   80483e0 <fflush@plt>
 804862e:	e8 43 ff ff ff       	call   8048576 <vuln>
 8048633:	83 c4 10             	add    $0x10,%esp
 8048636:	b8 00 00 00 00       	mov    $0x0,%eax
 804863b:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804863e:	59                   	pop    %ecx
 804863f:	5b                   	pop    %ebx
 8048640:	5d                   	pop    %ebp
 8048641:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048644:	c3                   	ret    
 8048645:	66 90                	xchg   %ax,%ax
 8048647:	66 90                	xchg   %ax,%ax
 8048649:	66 90                	xchg   %ax,%ax
 804864b:	66 90                	xchg   %ax,%ax
 804864d:	66 90                	xchg   %ax,%ax
 804864f:	90                   	nop

08048650 <__libc_csu_init>:
 8048650:	55                   	push   %ebp
 8048651:	57                   	push   %edi
 8048652:	56                   	push   %esi
 8048653:	53                   	push   %ebx
 8048654:	e8 57 fe ff ff       	call   80484b0 <__x86.get_pc_thunk.bx>
 8048659:	81 c3 a7 19 00 00    	add    $0x19a7,%ebx
 804865f:	83 ec 0c             	sub    $0xc,%esp
 8048662:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 8048666:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804866c:	e8 23 fd ff ff       	call   8048394 <_init>
 8048671:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048677:	29 c6                	sub    %eax,%esi
 8048679:	c1 fe 02             	sar    $0x2,%esi
 804867c:	85 f6                	test   %esi,%esi
 804867e:	74 25                	je     80486a5 <__libc_csu_init+0x55>
 8048680:	31 ff                	xor    %edi,%edi
 8048682:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048688:	83 ec 04             	sub    $0x4,%esp
 804868b:	55                   	push   %ebp
 804868c:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048690:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048694:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804869b:	83 c7 01             	add    $0x1,%edi
 804869e:	83 c4 10             	add    $0x10,%esp
 80486a1:	39 fe                	cmp    %edi,%esi
 80486a3:	75 e3                	jne    8048688 <__libc_csu_init+0x38>
 80486a5:	83 c4 0c             	add    $0xc,%esp
 80486a8:	5b                   	pop    %ebx
 80486a9:	5e                   	pop    %esi
 80486aa:	5f                   	pop    %edi
 80486ab:	5d                   	pop    %ebp
 80486ac:	c3                   	ret    
 80486ad:	8d 76 00             	lea    0x0(%esi),%esi

080486b0 <__libc_csu_fini>:
 80486b0:	f3 c3                	repz ret 

Disassembly of section .fini:

080486b4 <_fini>:
 80486b4:	53                   	push   %ebx
 80486b5:	83 ec 08             	sub    $0x8,%esp
 80486b8:	e8 f3 fd ff ff       	call   80484b0 <__x86.get_pc_thunk.bx>
 80486bd:	81 c3 43 19 00 00    	add    $0x1943,%ebx
 80486c3:	83 c4 08             	add    $0x8,%esp
 80486c6:	5b                   	pop    %ebx
 80486c7:	c3                   	ret    

Disassembly of section .rodata:

080486c8 <_fp_hw>:
 80486c8:	03 00                	add    (%eax),%eax
	...

080486cc <_IO_stdin_used>:
 80486cc:	01 00                	add    %eax,(%eax)
 80486ce:	02 00                	add    (%eax),%al
 80486d0:	48                   	dec    %eax
 80486d1:	65 72 65             	gs jb  8048739 <__GNU_EH_FRAME_HDR+0x25>
 80486d4:	27                   	daa    
 80486d5:	73 20                	jae    80486f7 <_IO_stdin_used+0x2b>
 80486d7:	61                   	popa   
 80486d8:	20 63 6c             	and    %ah,0x6c(%ebx)
 80486db:	75 65                	jne    8048742 <__GNU_EH_FRAME_HDR+0x2e>
 80486dd:	21 20                	and    %esp,(%eax)
 80486df:	54                   	push   %esp
 80486e0:	68 65 20 61 64       	push   $0x64612065
 80486e5:	64 72 65             	fs jb  804874d <__GNU_EH_FRAME_HDR+0x39>
 80486e8:	73 73                	jae    804875d <__GNU_EH_FRAME_HDR+0x49>
 80486ea:	20 6f 66             	and    %ch,0x66(%edi)
 80486ed:	20 62 75             	and    %ah,0x75(%edx)
 80486f0:	66 20 69 73          	data16 and %ch,0x73(%ecx)
 80486f4:	20 30                	and    %dh,(%eax)
 80486f6:	78 25                	js     804871d <__GNU_EH_FRAME_HDR+0x9>
 80486f8:	78 0a                	js     8048704 <_IO_stdin_used+0x38>
 80486fa:	00 00                	add    %al,(%eax)
 80486fc:	65 63 68 6f          	arpl   %bp,%gs:0x6f(%eax)
 8048700:	20 27                	and    %ah,(%edi)
 8048702:	45                   	inc    %ebp
 8048703:	6e                   	outsb  %ds:(%esi),(%dx)
 8048704:	74 65                	je     804876b <__GNU_EH_FRAME_HDR+0x57>
 8048706:	72 20                	jb     8048728 <__GNU_EH_FRAME_HDR+0x14>
 8048708:	61                   	popa   
 8048709:	20 73 74             	and    %dh,0x74(%ebx)
 804870c:	72 69                	jb     8048777 <__GNU_EH_FRAME_HDR+0x63>
 804870e:	6e                   	outsb  %ds:(%esi),(%dx)
 804870f:	67 3a 27             	cmp    (%bx),%ah
	...

Disassembly of section .eh_frame_hdr:

08048714 <__GNU_EH_FRAME_HDR>:
 8048714:	01 1b                	add    %ebx,(%ebx)
 8048716:	03 3b                	add    (%ebx),%edi
 8048718:	48                   	dec    %eax
 8048719:	00 00                	add    %al,(%eax)
 804871b:	00 08                	add    %cl,(%eax)
 804871d:	00 00                	add    %al,(%eax)
 804871f:	00 ac fc ff ff 78 00 	add    %ch,0x78ffff(%esp,%edi,8)
 8048726:	00 00                	add    %al,(%eax)
 8048728:	3c fd                	cmp    $0xfd,%al
 804872a:	ff                   	(bad)  
 804872b:	ff 9c 00 00 00 8c fd 	lcall  *-0x2740000(%eax,%eax,1)
 8048732:	ff                   	(bad)  
 8048733:	ff 64 00 00          	jmp    *0x0(%eax,%eax,1)
 8048737:	00 62 fe             	add    %ah,-0x2(%edx)
 804873a:	ff                   	(bad)  
 804873b:	ff b0 00 00 00 bb    	pushl  -0x45000000(%eax)
 8048741:	fe                   	(bad)  
 8048742:	ff                   	(bad)  
 8048743:	ff                   	(bad)  
 8048744:	fc                   	cld    
 8048745:	00 00                	add    %al,(%eax)
 8048747:	00 db                	add    %bl,%bl
 8048749:	fe                   	(bad)  
 804874a:	ff                   	(bad)  
 804874b:	ff 20                	jmp    *(%eax)
 804874d:	01 00                	add    %eax,(%eax)
 804874f:	00 3c ff             	add    %bh,(%edi,%edi,8)
 8048752:	ff                   	(bad)  
 8048753:	ff 54 01 00          	call   *0x0(%ecx,%eax,1)
 8048757:	00 9c ff ff ff a0 01 	add    %bl,0x1a0ffff(%edi,%edi,8)
	...

Disassembly of section .eh_frame:

08048760 <__FRAME_END__-0x168>:
 8048760:	14 00                	adc    $0x0,%al
 8048762:	00 00                	add    %al,(%eax)
 8048764:	00 00                	add    %al,(%eax)
 8048766:	00 00                	add    %al,(%eax)
 8048768:	01 7a 52             	add    %edi,0x52(%edx)
 804876b:	00 01                	add    %al,(%ecx)
 804876d:	7c 08                	jl     8048777 <__GNU_EH_FRAME_HDR+0x63>
 804876f:	01 1b                	add    %ebx,(%ebx)
 8048771:	0c 04                	or     $0x4,%al
 8048773:	04 88                	add    $0x88,%al
 8048775:	01 00                	add    %eax,(%eax)
 8048777:	00 10                	add    %dl,(%eax)
 8048779:	00 00                	add    %al,(%eax)
 804877b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804877e:	00 00                	add    %al,(%eax)
 8048780:	20 fd                	and    %bh,%ch
 8048782:	ff                   	(bad)  
 8048783:	ff 02                	incl   (%edx)
 8048785:	00 00                	add    %al,(%eax)
 8048787:	00 00                	add    %al,(%eax)
 8048789:	00 00                	add    %al,(%eax)
 804878b:	00 20                	add    %ah,(%eax)
 804878d:	00 00                	add    %al,(%eax)
 804878f:	00 30                	add    %dh,(%eax)
 8048791:	00 00                	add    %al,(%eax)
 8048793:	00 2c fc             	add    %ch,(%esp,%edi,8)
 8048796:	ff                   	(bad)  
 8048797:	ff 90 00 00 00 00    	call   *0x0(%eax)
 804879d:	0e                   	push   %cs
 804879e:	08 46 0e             	or     %al,0xe(%esi)
 80487a1:	0c 4a                	or     $0x4a,%al
 80487a3:	0f 0b                	ud2    
 80487a5:	74 04                	je     80487ab <__GNU_EH_FRAME_HDR+0x97>
 80487a7:	78 00                	js     80487a9 <__GNU_EH_FRAME_HDR+0x95>
 80487a9:	3f                   	aas    
 80487aa:	1a 3b                	sbb    (%ebx),%bh
 80487ac:	2a 32                	sub    (%edx),%dh
 80487ae:	24 22                	and    $0x22,%al
 80487b0:	10 00                	adc    %al,(%eax)
 80487b2:	00 00                	add    %al,(%eax)
 80487b4:	54                   	push   %esp
 80487b5:	00 00                	add    %al,(%eax)
 80487b7:	00 98 fc ff ff 08    	add    %bl,0x8fffffc(%eax)
 80487bd:	00 00                	add    %al,(%eax)
 80487bf:	00 00                	add    %al,(%eax)
 80487c1:	00 00                	add    %al,(%eax)
 80487c3:	00 48 00             	add    %cl,0x0(%eax)
 80487c6:	00 00                	add    %al,(%eax)
 80487c8:	68 00 00 00 aa       	push   $0xaa000000
 80487cd:	fd                   	std    
 80487ce:	ff                   	(bad)  
 80487cf:	ff 59 00             	lcall  *0x0(%ecx)
 80487d2:	00 00                	add    %al,(%eax)
 80487d4:	00 41 0e             	add    %al,0xe(%ecx)
 80487d7:	08 87 02 41 0e 0c    	or     %al,0xc0e4102(%edi)
 80487dd:	86 03                	xchg   %al,(%ebx)
 80487df:	41                   	inc    %ecx
 80487e0:	0e                   	push   %cs
 80487e1:	10 83 04 46 0e b8    	adc    %al,-0x47f1b9fc(%ebx)
 80487e7:	01 50 0e             	add    %edx,0xe(%eax)
 80487ea:	bc 01 47 0e c0       	mov    $0xc00e4701,%esp
 80487ef:	01 48 0e             	add    %ecx,0xe(%eax)
 80487f2:	bc 01 48 0e c0       	mov    $0xc00e4801,%esp
 80487f7:	01 58 0e             	add    %ebx,0xe(%eax)
 80487fa:	bc 01 42 0e c0       	mov    $0xc00e4201,%esp
 80487ff:	01 4b 0e             	add    %ecx,0xe(%ebx)
 8048802:	10 41 c3             	adc    %al,-0x3d(%ecx)
 8048805:	0e                   	push   %cs
 8048806:	0c 41                	or     $0x41,%al
 8048808:	c6                   	(bad)  
 8048809:	0e                   	push   %cs
 804880a:	08 41 c7             	or     %al,-0x39(%ecx)
 804880d:	0e                   	push   %cs
 804880e:	04 00                	add    $0x0,%al
 8048810:	20 00                	and    %al,(%eax)
 8048812:	00 00                	add    %al,(%eax)
 8048814:	b4 00                	mov    $0x0,%ah
 8048816:	00 00                	add    %al,(%eax)
 8048818:	b7 fd                	mov    $0xfd,%bh
 804881a:	ff                   	(bad)  
 804881b:	ff 20                	jmp    *(%eax)
 804881d:	00 00                	add    %al,(%eax)
 804881f:	00 00                	add    %al,(%eax)
 8048821:	41                   	inc    %ecx
 8048822:	0e                   	push   %cs
 8048823:	08 83 02 43 0e 1c    	or     %al,0x1c0e4302(%ebx)
 8048829:	52                   	push   %edx
 804882a:	0e                   	push   %cs
 804882b:	20 48 0e             	and    %cl,0xe(%eax)
 804882e:	08 41 c3             	or     %al,-0x3d(%ecx)
 8048831:	0e                   	push   %cs
 8048832:	04 00                	add    $0x0,%al
 8048834:	30 00                	xor    %al,(%eax)
 8048836:	00 00                	add    %al,(%eax)
 8048838:	d8 00                	fadds  (%eax)
 804883a:	00 00                	add    %al,(%eax)
 804883c:	b3 fd                	mov    $0xfd,%bl
 804883e:	ff                   	(bad)  
 804883f:	ff 56 00             	call   *0x0(%esi)
 8048842:	00 00                	add    %al,(%eax)
 8048844:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 8048848:	00 47 10             	add    %al,0x10(%edi)
 804884b:	05 02 75 00 44       	add    $0x44007502,%eax
 8048850:	0f 03 75 78          	lsl    0x78(%ebp),%esi
 8048854:	06                   	push   %es
 8048855:	10 03                	adc    %al,(%ebx)
 8048857:	02 75 7c             	add    0x7c(%ebp),%dh
 804885a:	02 41 c1             	add    -0x3f(%ecx),%al
 804885d:	0c 01                	or     $0x1,%al
 804885f:	00 41 c3             	add    %al,-0x3d(%ecx)
 8048862:	41                   	inc    %ecx
 8048863:	c5 43 0c             	lds    0xc(%ebx),%eax
 8048866:	04 04                	add    $0x4,%al
 8048868:	48                   	dec    %eax
 8048869:	00 00                	add    %al,(%eax)
 804886b:	00 0c 01             	add    %cl,(%ecx,%eax,1)
 804886e:	00 00                	add    %al,(%eax)
 8048870:	e0 fd                	loopne 804886f <__GNU_EH_FRAME_HDR+0x15b>
 8048872:	ff                   	(bad)  
 8048873:	ff 5d 00             	lcall  *0x0(%ebp)
 8048876:	00 00                	add    %al,(%eax)
 8048878:	00 41 0e             	add    %al,0xe(%ecx)
 804887b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048881:	87 03                	xchg   %eax,(%ebx)
 8048883:	41                   	inc    %ecx
 8048884:	0e                   	push   %cs
 8048885:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804888b:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 8048892:	24 41                	and    $0x41,%al
 8048894:	0e                   	push   %cs
 8048895:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048899:	44                   	inc    %esp
 804889a:	0e                   	push   %cs
 804889b:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804889e:	20 47 0e             	and    %al,0xe(%edi)
 80488a1:	14 41                	adc    $0x41,%al
 80488a3:	c3                   	ret    
 80488a4:	0e                   	push   %cs
 80488a5:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80488a8:	0e                   	push   %cs
 80488a9:	0c 41                	or     $0x41,%al
 80488ab:	c7                   	(bad)  
 80488ac:	0e                   	push   %cs
 80488ad:	08 41 c5             	or     %al,-0x3b(%ecx)
 80488b0:	0e                   	push   %cs
 80488b1:	04 00                	add    $0x0,%al
 80488b3:	00 10                	add    %dl,(%eax)
 80488b5:	00 00                	add    %al,(%eax)
 80488b7:	00 58 01             	add    %bl,0x1(%eax)
 80488ba:	00 00                	add    %al,(%eax)
 80488bc:	f4                   	hlt    
 80488bd:	fd                   	std    
 80488be:	ff                   	(bad)  
 80488bf:	ff 02                	incl   (%edx)
 80488c1:	00 00                	add    %al,(%eax)
 80488c3:	00 00                	add    %al,(%eax)
 80488c5:	00 00                	add    %al,(%eax)
	...

080488c8 <__FRAME_END__>:
 80488c8:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	70 85                	jo     8049e8f <__FRAME_END__+0x15c7>
 8049f0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	40                   	inc    %eax
 8049f0d:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .dynamic:

08049f10 <_DYNAMIC>:
 8049f10:	01 00                	add    %eax,(%eax)
 8049f12:	00 00                	add    %al,(%eax)
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	0c 00                	or     $0x0,%al
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	94                   	xchg   %eax,%esp
 8049f1d:	83 04 08 0d          	addl   $0xd,(%eax,%ecx,1)
 8049f21:	00 00                	add    %al,(%eax)
 8049f23:	00 b4 86 04 08 19 00 	add    %dh,0x190804(%esi,%eax,4)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	04 00                	add    $0x0,%al
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	1a 00                	sbb    (%eax),%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	0c 9f                	or     $0x9f,%al
 8049f3e:	04 08                	add    $0x8,%al
 8049f40:	1c 00                	sbb    $0x0,%al
 8049f42:	00 00                	add    %al,(%eax)
 8049f44:	04 00                	add    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	f5                   	cmc    
 8049f49:	fe                   	(bad)  
 8049f4a:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f4d:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f54:	8c 82 04 08 06 00    	mov    %es,0x60804(%edx)
 8049f5a:	00 00                	add    %al,(%eax)
 8049f5c:	cc                   	int3   
 8049f5d:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f64:	7d 00                	jge    8049f66 <_DYNAMIC+0x56>
 8049f66:	00 00                	add    %al,(%eax)
 8049f68:	0b 00                	or     (%eax),%eax
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	10 00                	adc    %al,(%eax)
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	15 00 00 00 00       	adc    $0x0,%eax
 8049f75:	00 00                	add    %al,(%eax)
 8049f77:	00 03                	add    %al,(%ebx)
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 00                	add    %al,(%eax)
 8049f7d:	a0 04 08 02 00       	mov    0x20804,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	40                   	inc    %eax
 8049f85:	00 00                	add    %al,(%eax)
 8049f87:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	11 00                	adc    %eax,(%eax)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	17                   	pop    %ss
 8049f91:	00 00                	add    %al,(%eax)
 8049f93:	00 54 83 04          	add    %dl,0x4(%ebx,%eax,4)
 8049f97:	08 11                	or     %dl,(%ecx)
 8049f99:	00 00                	add    %al,(%eax)
 8049f9b:	00 44 83 04          	add    %al,0x4(%ebx,%eax,4)
 8049f9f:	08 12                	or     %dl,(%edx)
 8049fa1:	00 00                	add    %al,(%eax)
 8049fa3:	00 10                	add    %dl,(%eax)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 13                	add    %dl,(%ebx)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 08                	add    %cl,(%eax)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 fe                	add    %bh,%dh
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 24             	ljmp   *0x24(%edi)
 8049fb5:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fbd:	00 00                	add    %al,(%eax)
 8049fbf:	00 f0                	add    %dh,%al
 8049fc1:	ff                   	(bad)  
 8049fc2:	ff 6f 0a             	ljmp   *0xa(%edi)
 8049fc5:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ff8 <.got>:
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	10 9f 04 08 00 00    	adc    %bl,0x804(%edi)
 804a006:	00 00                	add    %al,(%eax)
 804a008:	00 00                	add    %al,(%eax)
 804a00a:	00 00                	add    %al,(%eax)
 804a00c:	d6                   	(bad)  
 804a00d:	83 04 08 e6          	addl   $0xffffffe6,(%eax,%ecx,1)
 804a011:	83 04 08 f6          	addl   $0xfffffff6,(%eax,%ecx,1)
 804a015:	83 04 08 06          	addl   $0x6,(%eax,%ecx,1)
 804a019:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a01c:	16                   	push   %ss
 804a01d:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a020:	26 84 04 08          	test   %al,%es:(%eax,%ecx,1)
 804a024:	36 84 04 08          	test   %al,%ss:(%eax,%ecx,1)
 804a028:	46                   	inc    %esi
 804a029:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .data:

0804a02c <__data_start>:
 804a02c:	00 00                	add    %al,(%eax)
	...

0804a030 <__dso_handle>:
 804a030:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a034 <__bss_start>:
 804a034:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804831c>
   a:	74 75                	je     81 <_init-0x8048313>
   c:	20 37                	and    %dh,(%edi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x804831c>
  16:	75 6e                	jne    86 <_init-0x804830e>
  18:	74 75                	je     8f <_init-0x8048305>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	38 2e                	cmp    %ch,(%esi)
  1f:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  22:	20 37                	and    %dh,(%edi)
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    %al,%cs:(%eax)
