
vuln(3):     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 03                	add    %al,(%ebx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 02                	add    %al,(%edx)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 00                	add    %al,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 c2                	add    %al,%dl
 8048199:	f9                   	stc    
 804819a:	3d 23 7b d6 78       	cmp    $0x78d67b23,%eax
 804819f:	b1 99                	mov    $0x99,%cl
 80481a1:	43                   	inc    %ebx
 80481a2:	43                   	inc    %ebx
 80481a3:	b8 ea 1a b9 a5       	mov    $0xa5b91aea,%eax
 80481a8:	25                   	.byte 0x25
 80481a9:	04 73                	add    $0x73,%al
 80481ab:	75                   	.byte 0x75

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	11 00                	adc    %eax,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 11                	add    %dl,(%ecx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x300>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	77 00                	ja     80481de <_init-0x2ae>
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	1a 00                	sbb    (%eax),%al
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	49                   	dec    %ecx
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 67 00             	add    %ah,0x0(%edi)
	...
 8048216:	00 00                	add    %al,(%eax)
 8048218:	12 00                	adc    (%eax),%al
 804821a:	00 00                	add    %al,(%eax)
 804821c:	4f                   	dec    %edi
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 6e 00             	add    %ch,0x0(%esi)
	...
 8048236:	00 00                	add    %al,(%eax)
 8048238:	12 00                	adc    (%eax),%al
 804823a:	00 00                	add    %al,(%eax)
 804823c:	76 00                	jbe    804823e <_init-0x24e>
	...
 8048246:	00 00                	add    %al,(%eax)
 8048248:	12 00                	adc    (%eax),%al
 804824a:	00 00                	add    %al,(%eax)
 804824c:	3c 00                	cmp    $0x0,%al
	...
 8048256:	00 00                	add    %al,(%eax)
 8048258:	12 00                	adc    (%eax),%al
 804825a:	00 00                	add    %al,(%eax)
 804825c:	ac                   	lods   %ds:(%esi),%al
	...
 8048265:	00 00                	add    %al,(%eax)
 8048267:	00 20                	add    %ah,(%eax)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 21                	add    %ah,(%ecx)
	...
 8048275:	00 00                	add    %al,(%eax)
 8048277:	00 12                	add    %dl,(%edx)
 8048279:	00 00                	add    %al,(%eax)
 804827b:	00 7c 00 00          	add    %bh,0x0(%eax,%eax,1)
	...
 8048287:	00 12                	add    %dl,(%edx)
 8048289:	00 00                	add    %al,(%eax)
 804828b:	00 2c 00             	add    %ch,(%eax,%eax,1)
	...
 8048296:	00 00                	add    %al,(%eax)
 8048298:	12 00                	adc    (%eax),%al
 804829a:	00 00                	add    %al,(%eax)
 804829c:	26 00 00             	add    %al,%es:(%eax)
	...
 80482a7:	00 12                	add    %dl,(%edx)
 80482a9:	00 00                	add    %al,(%eax)
 80482ab:	00 41 00             	add    %al,0x0(%ecx)
	...
 80482b6:	00 00                	add    %al,(%eax)
 80482b8:	12 00                	adc    (%eax),%al
 80482ba:	00 00                	add    %al,(%eax)
 80482bc:	56                   	push   %esi
	...
 80482c5:	00 00                	add    %al,(%eax)
 80482c7:	00 11                	add    %dl,(%ecx)
 80482c9:	00 00                	add    %al,(%eax)
 80482cb:	00 5d 00             	add    %bl,0x0(%ebp)
	...
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	12 00                	adc    (%eax),%al
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	0b 00                	or     (%eax),%eax
 80482de:	00 00                	add    %al,(%eax)
 80482e0:	3c 89                	cmp    $0x89,%al
 80482e2:	04 08                	add    $0x8,%al
 80482e4:	04 00                	add    $0x0,%al
 80482e6:	00 00                	add    %al,(%eax)
 80482e8:	11 00                	adc    %eax,(%eax)
 80482ea:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

080482ec <.dynstr>:
 80482ec:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80482f0:	63 2e                	arpl   %bp,(%esi)
 80482f2:	73 6f                	jae    8048363 <_init-0x129>
 80482f4:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 80482f9:	4f                   	dec    %edi
 80482fa:	5f                   	pop    %edi
 80482fb:	73 74                	jae    8048371 <_init-0x11b>
 80482fd:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048304:	64 
 8048305:	00 66 66             	add    %ah,0x66(%esi)
 8048308:	6c                   	insb   (%dx),%es:(%edi)
 8048309:	75 73                	jne    804837e <_init-0x10e>
 804830b:	68 00 65 78 69       	push   $0x69786500
 8048310:	74 00                	je     8048312 <_init-0x17a>
 8048312:	66 6f                	outsw  %ds:(%esi),(%dx)
 8048314:	70 65                	jo     804837b <_init-0x111>
 8048316:	6e                   	outsb  %ds:(%esi),(%dx)
 8048317:	00 5f 5f             	add    %bl,0x5f(%edi)
 804831a:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%ebx),%esi
 8048321:	73 73                	jae    8048396 <_init-0xf6>
 8048323:	63 61 6e             	arpl   %sp,0x6e(%ecx)
 8048326:	66 00 70 75          	data16 add %dh,0x75(%eax)
 804832a:	74 73                	je     804839f <_init-0xed>
 804832c:	00 70 75             	add    %dh,0x75(%eax)
 804832f:	74 63                	je     8048394 <_init-0xf8>
 8048331:	68 61 72 00 66       	push   $0x66007261
 8048336:	67 65 74 73          	addr16 gs je 80483ad <_init-0xdf>
 804833a:	00 6d 65             	add    %ch,0x65(%ebp)
 804833d:	6d                   	insl   (%dx),%es:(%edi)
 804833e:	63 6d 70             	arpl   %bp,0x70(%ebp)
 8048341:	00 73 74             	add    %dh,0x74(%ebx)
 8048344:	64 6f                	outsl  %fs:(%esi),(%dx)
 8048346:	75 74                	jne    80483bc <_init-0xd0>
 8048348:	00 73 65             	add    %dh,0x65(%ebx)
 804834b:	74 72                	je     80483bf <_init-0xcd>
 804834d:	65 73 67             	gs jae 80483b7 <_init-0xd5>
 8048350:	69 64 00 66 63 6c 6f 	imul   $0x736f6c63,0x66(%eax,%eax,1),%esp
 8048357:	73 
 8048358:	65 00 67 65          	add    %ah,%gs:0x65(%edi)
 804835c:	74 65                	je     80483c3 <_init-0xc9>
 804835e:	67 69 64 00 66 72 65 	imul   $0x61657266,0x0(%si),%esp
 8048365:	61 
 8048366:	64 00 5f 5f          	add    %bl,%fs:0x5f(%edi)
 804836a:	6c                   	insb   (%dx),%es:(%edi)
 804836b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048372:	72 74                	jb     80483e8 <_init-0xa4>
 8048374:	5f                   	pop    %edi
 8048375:	6d                   	insl   (%dx),%es:(%edi)
 8048376:	61                   	popa   
 8048377:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 804837e:	43                   	inc    %ebx
 804837f:	5f                   	pop    %edi
 8048380:	32 2e                	xor    (%esi),%ch
 8048382:	37                   	aaa    
 8048383:	00 47 4c             	add    %al,0x4c(%edi)
 8048386:	49                   	dec    %ecx
 8048387:	42                   	inc    %edx
 8048388:	43                   	inc    %ebx
 8048389:	5f                   	pop    %edi
 804838a:	32 2e                	xor    (%esi),%ch
 804838c:	31 00                	xor    %eax,(%eax)
 804838e:	47                   	inc    %edi
 804838f:	4c                   	dec    %esp
 8048390:	49                   	dec    %ecx
 8048391:	42                   	inc    %edx
 8048392:	43                   	inc    %ebx
 8048393:	5f                   	pop    %edi
 8048394:	32 2e                	xor    (%esi),%ch
 8048396:	30 00                	xor    %al,(%eax)
 8048398:	5f                   	pop    %edi
 8048399:	5f                   	pop    %edi
 804839a:	67 6d                	insl   (%dx),%es:(%di)
 804839c:	6f                   	outsl  %ds:(%esi),(%dx)
 804839d:	6e                   	outsb  %ds:(%esi),(%dx)
 804839e:	5f                   	pop    %edi
 804839f:	73 74                	jae    8048415 <_init-0x77>
 80483a1:	61                   	popa   
 80483a2:	72 74                	jb     8048418 <_init-0x74>
 80483a4:	5f                   	pop    %edi
 80483a5:	5f                   	pop    %edi
	...

Disassembly of section .gnu.version:

080483a8 <.gnu.version>:
 80483a8:	00 00                	add    %al,(%eax)
 80483aa:	02 00                	add    (%eax),%al
 80483ac:	02 00                	add    (%eax),%al
 80483ae:	02 00                	add    (%eax),%al
 80483b0:	03 00                	add    (%eax),%eax
 80483b2:	02 00                	add    (%eax),%al
 80483b4:	02 00                	add    (%eax),%al
 80483b6:	02 00                	add    (%eax),%al
 80483b8:	02 00                	add    (%eax),%al
 80483ba:	00 00                	add    %al,(%eax)
 80483bc:	02 00                	add    (%eax),%al
 80483be:	02 00                	add    (%eax),%al
 80483c0:	04 00                	add    $0x0,%al
 80483c2:	03 00                	add    (%eax),%eax
 80483c4:	02 00                	add    (%eax),%al
 80483c6:	02 00                	add    (%eax),%al
 80483c8:	02 00                	add    (%eax),%al
 80483ca:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080483cc <.gnu.version_r>:
 80483cc:	01 00                	add    %eax,(%eax)
 80483ce:	03 00                	add    (%eax),%eax
 80483d0:	01 00                	add    %eax,(%eax)
 80483d2:	00 00                	add    %al,(%eax)
 80483d4:	10 00                	adc    %al,(%eax)
 80483d6:	00 00                	add    %al,(%eax)
 80483d8:	00 00                	add    %al,(%eax)
 80483da:	00 00                	add    %al,(%eax)
 80483dc:	17                   	pop    %ss
 80483dd:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%ecx),%ebp
 80483e4:	8e 00                	mov    (%eax),%es
 80483e6:	00 00                	add    %al,(%eax)
 80483e8:	10 00                	adc    %al,(%eax)
 80483ea:	00 00                	add    %al,(%eax)
 80483ec:	11 69 69             	adc    %ebp,0x69(%ecx)
 80483ef:	0d 00 00 03 00       	or     $0x30000,%eax
 80483f4:	98                   	cwtl   
 80483f5:	00 00                	add    %al,(%eax)
 80483f7:	00 10                	add    %dl,(%eax)
 80483f9:	00 00                	add    %al,(%eax)
 80483fb:	00 10                	add    %dl,(%eax)
 80483fd:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 8048404:	a2 00 00 00 00       	mov    %al,0x0
 8048409:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804840c <.rel.dyn>:
 804840c:	f8                   	clc    
 804840d:	9f                   	lahf   
 804840e:	04 08                	add    $0x8,%al
 8048410:	06                   	push   %es
 8048411:	09 00                	or     %eax,(%eax)
 8048413:	00 fc                	add    %bh,%ah
 8048415:	9f                   	lahf   
 8048416:	04 08                	add    $0x8,%al
 8048418:	06                   	push   %es
 8048419:	0f 00 00             	sldt   (%eax)

Disassembly of section .rel.plt:

0804841c <.rel.plt>:
 804841c:	0c a0                	or     $0xa0,%al
 804841e:	04 08                	add    $0x8,%al
 8048420:	07                   	pop    %es
 8048421:	01 00                	add    %eax,(%eax)
 8048423:	00 10                	add    %dl,(%eax)
 8048425:	a0 04 08 07 02       	mov    0x2070804,%al
 804842a:	00 00                	add    %al,(%eax)
 804842c:	14 a0                	adc    $0xa0,%al
 804842e:	04 08                	add    $0x8,%al
 8048430:	07                   	pop    %es
 8048431:	03 00                	add    (%eax),%eax
 8048433:	00 18                	add    %bl,(%eax)
 8048435:	a0 04 08 07 04       	mov    0x4070804,%al
 804843a:	00 00                	add    %al,(%eax)
 804843c:	1c a0                	sbb    $0xa0,%al
 804843e:	04 08                	add    $0x8,%al
 8048440:	07                   	pop    %es
 8048441:	05 00 00 20 a0       	add    $0xa0200000,%eax
 8048446:	04 08                	add    $0x8,%al
 8048448:	07                   	pop    %es
 8048449:	06                   	push   %es
 804844a:	00 00                	add    %al,(%eax)
 804844c:	24 a0                	and    $0xa0,%al
 804844e:	04 08                	add    $0x8,%al
 8048450:	07                   	pop    %es
 8048451:	07                   	pop    %es
 8048452:	00 00                	add    %al,(%eax)
 8048454:	28 a0 04 08 07 08    	sub    %ah,0x8070804(%eax)
 804845a:	00 00                	add    %al,(%eax)
 804845c:	2c a0                	sub    $0xa0,%al
 804845e:	04 08                	add    $0x8,%al
 8048460:	07                   	pop    %es
 8048461:	0a 00                	or     (%eax),%al
 8048463:	00 30                	add    %dh,(%eax)
 8048465:	a0 04 08 07 0b       	mov    0xb070804,%al
 804846a:	00 00                	add    %al,(%eax)
 804846c:	34 a0                	xor    $0xa0,%al
 804846e:	04 08                	add    $0x8,%al
 8048470:	07                   	pop    %es
 8048471:	0c 00                	or     $0x0,%al
 8048473:	00 38                	add    %bh,(%eax)
 8048475:	a0 04 08 07 0d       	mov    0xd070804,%al
 804847a:	00 00                	add    %al,(%eax)
 804847c:	3c a0                	cmp    $0xa0,%al
 804847e:	04 08                	add    $0x8,%al
 8048480:	07                   	pop    %es
 8048481:	0e                   	push   %cs
 8048482:	00 00                	add    %al,(%eax)
 8048484:	40                   	inc    %eax
 8048485:	a0 04 08 07 10       	mov    0x10070804,%al
	...

Disassembly of section .init:

0804848c <_init>:
 804848c:	53                   	push   %ebx
 804848d:	83 ec 08             	sub    $0x8,%esp
 8048490:	e8 6b 01 00 00       	call   8048600 <__x86.get_pc_thunk.bx>
 8048495:	81 c3 6b 1b 00 00    	add    $0x1b6b,%ebx
 804849b:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
 80484a1:	85 c0                	test   %eax,%eax
 80484a3:	74 05                	je     80484aa <_init+0x1e>
 80484a5:	e8 f6 00 00 00       	call   80485a0 <.plt.got>
 80484aa:	83 c4 08             	add    $0x8,%esp
 80484ad:	5b                   	pop    %ebx
 80484ae:	c3                   	ret    

Disassembly of section .plt:

080484b0 <.plt>:
 80484b0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80484b6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80484bc:	00 00                	add    %al,(%eax)
	...

080484c0 <read@plt>:
 80484c0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80484c6:	68 00 00 00 00       	push   $0x0
 80484cb:	e9 e0 ff ff ff       	jmp    80484b0 <.plt>

080484d0 <fflush@plt>:
 80484d0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80484d6:	68 08 00 00 00       	push   $0x8
 80484db:	e9 d0 ff ff ff       	jmp    80484b0 <.plt>

080484e0 <fgets@plt>:
 80484e0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80484e6:	68 10 00 00 00       	push   $0x10
 80484eb:	e9 c0 ff ff ff       	jmp    80484b0 <.plt>

080484f0 <fclose@plt>:
 80484f0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80484f6:	68 18 00 00 00       	push   $0x18
 80484fb:	e9 b0 ff ff ff       	jmp    80484b0 <.plt>

08048500 <memcmp@plt>:
 8048500:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048506:	68 20 00 00 00       	push   $0x20
 804850b:	e9 a0 ff ff ff       	jmp    80484b0 <.plt>

08048510 <getegid@plt>:
 8048510:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048516:	68 28 00 00 00       	push   $0x28
 804851b:	e9 90 ff ff ff       	jmp    80484b0 <.plt>

08048520 <fread@plt>:
 8048520:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048526:	68 30 00 00 00       	push   $0x30
 804852b:	e9 80 ff ff ff       	jmp    80484b0 <.plt>

08048530 <puts@plt>:
 8048530:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048536:	68 38 00 00 00       	push   $0x38
 804853b:	e9 70 ff ff ff       	jmp    80484b0 <.plt>

08048540 <exit@plt>:
 8048540:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048546:	68 40 00 00 00       	push   $0x40
 804854b:	e9 60 ff ff ff       	jmp    80484b0 <.plt>

08048550 <__libc_start_main@plt>:
 8048550:	ff 25 30 a0 04 08    	jmp    *0x804a030
 8048556:	68 48 00 00 00       	push   $0x48
 804855b:	e9 50 ff ff ff       	jmp    80484b0 <.plt>

08048560 <__isoc99_sscanf@plt>:
 8048560:	ff 25 34 a0 04 08    	jmp    *0x804a034
 8048566:	68 50 00 00 00       	push   $0x50
 804856b:	e9 40 ff ff ff       	jmp    80484b0 <.plt>

08048570 <fopen@plt>:
 8048570:	ff 25 38 a0 04 08    	jmp    *0x804a038
 8048576:	68 58 00 00 00       	push   $0x58
 804857b:	e9 30 ff ff ff       	jmp    80484b0 <.plt>

08048580 <putchar@plt>:
 8048580:	ff 25 3c a0 04 08    	jmp    *0x804a03c
 8048586:	68 60 00 00 00       	push   $0x60
 804858b:	e9 20 ff ff ff       	jmp    80484b0 <.plt>

08048590 <setresgid@plt>:
 8048590:	ff 25 40 a0 04 08    	jmp    *0x804a040
 8048596:	68 68 00 00 00       	push   $0x68
 804859b:	e9 10 ff ff ff       	jmp    80484b0 <.plt>

Disassembly of section .plt.got:

080485a0 <.plt.got>:
 80485a0:	ff 25 f8 9f 04 08    	jmp    *0x8049ff8
 80485a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080485b0 <_start>:
 80485b0:	31 ed                	xor    %ebp,%ebp
 80485b2:	5e                   	pop    %esi
 80485b3:	89 e1                	mov    %esp,%ecx
 80485b5:	83 e4 f0             	and    $0xfffffff0,%esp
 80485b8:	50                   	push   %eax
 80485b9:	54                   	push   %esp
 80485ba:	52                   	push   %edx
 80485bb:	e8 23 00 00 00       	call   80485e3 <_start+0x33>
 80485c0:	81 c3 40 1a 00 00    	add    $0x1a40,%ebx
 80485c6:	8d 83 20 e9 ff ff    	lea    -0x16e0(%ebx),%eax
 80485cc:	50                   	push   %eax
 80485cd:	8d 83 c0 e8 ff ff    	lea    -0x1740(%ebx),%eax
 80485d3:	50                   	push   %eax
 80485d4:	51                   	push   %ecx
 80485d5:	56                   	push   %esi
 80485d6:	c7 c0 79 88 04 08    	mov    $0x8048879,%eax
 80485dc:	50                   	push   %eax
 80485dd:	e8 6e ff ff ff       	call   8048550 <__libc_start_main@plt>
 80485e2:	f4                   	hlt    
 80485e3:	8b 1c 24             	mov    (%esp),%ebx
 80485e6:	c3                   	ret    
 80485e7:	66 90                	xchg   %ax,%ax
 80485e9:	66 90                	xchg   %ax,%ax
 80485eb:	66 90                	xchg   %ax,%ax
 80485ed:	66 90                	xchg   %ax,%ax
 80485ef:	90                   	nop

080485f0 <_dl_relocate_static_pie>:
 80485f0:	f3 c3                	repz ret 
 80485f2:	66 90                	xchg   %ax,%ax
 80485f4:	66 90                	xchg   %ax,%ax
 80485f6:	66 90                	xchg   %ax,%ax
 80485f8:	66 90                	xchg   %ax,%ax
 80485fa:	66 90                	xchg   %ax,%ax
 80485fc:	66 90                	xchg   %ax,%ax
 80485fe:	66 90                	xchg   %ax,%ax

08048600 <__x86.get_pc_thunk.bx>:
 8048600:	8b 1c 24             	mov    (%esp),%ebx
 8048603:	c3                   	ret    
 8048604:	66 90                	xchg   %ax,%ax
 8048606:	66 90                	xchg   %ax,%ax
 8048608:	66 90                	xchg   %ax,%ax
 804860a:	66 90                	xchg   %ax,%ax
 804860c:	66 90                	xchg   %ax,%ax
 804860e:	66 90                	xchg   %ax,%ax

08048610 <deregister_tm_clones>:
 8048610:	b8 4c a0 04 08       	mov    $0x804a04c,%eax
 8048615:	3d 4c a0 04 08       	cmp    $0x804a04c,%eax
 804861a:	74 24                	je     8048640 <deregister_tm_clones+0x30>
 804861c:	b8 00 00 00 00       	mov    $0x0,%eax
 8048621:	85 c0                	test   %eax,%eax
 8048623:	74 1b                	je     8048640 <deregister_tm_clones+0x30>
 8048625:	55                   	push   %ebp
 8048626:	89 e5                	mov    %esp,%ebp
 8048628:	83 ec 14             	sub    $0x14,%esp
 804862b:	68 4c a0 04 08       	push   $0x804a04c
 8048630:	ff d0                	call   *%eax
 8048632:	83 c4 10             	add    $0x10,%esp
 8048635:	c9                   	leave  
 8048636:	c3                   	ret    
 8048637:	89 f6                	mov    %esi,%esi
 8048639:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8048640:	f3 c3                	repz ret 
 8048642:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048649:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048650 <register_tm_clones>:
 8048650:	b8 4c a0 04 08       	mov    $0x804a04c,%eax
 8048655:	2d 4c a0 04 08       	sub    $0x804a04c,%eax
 804865a:	c1 f8 02             	sar    $0x2,%eax
 804865d:	89 c2                	mov    %eax,%edx
 804865f:	c1 ea 1f             	shr    $0x1f,%edx
 8048662:	01 d0                	add    %edx,%eax
 8048664:	d1 f8                	sar    %eax
 8048666:	74 20                	je     8048688 <register_tm_clones+0x38>
 8048668:	ba 00 00 00 00       	mov    $0x0,%edx
 804866d:	85 d2                	test   %edx,%edx
 804866f:	74 17                	je     8048688 <register_tm_clones+0x38>
 8048671:	55                   	push   %ebp
 8048672:	89 e5                	mov    %esp,%ebp
 8048674:	83 ec 10             	sub    $0x10,%esp
 8048677:	50                   	push   %eax
 8048678:	68 4c a0 04 08       	push   $0x804a04c
 804867d:	ff d2                	call   *%edx
 804867f:	83 c4 10             	add    $0x10,%esp
 8048682:	c9                   	leave  
 8048683:	c3                   	ret    
 8048684:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048688:	f3 c3                	repz ret 
 804868a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048690 <__do_global_dtors_aux>:
 8048690:	80 3d 4c a0 04 08 00 	cmpb   $0x0,0x804a04c
 8048697:	75 17                	jne    80486b0 <__do_global_dtors_aux+0x20>
 8048699:	55                   	push   %ebp
 804869a:	89 e5                	mov    %esp,%ebp
 804869c:	83 ec 08             	sub    $0x8,%esp
 804869f:	e8 6c ff ff ff       	call   8048610 <deregister_tm_clones>
 80486a4:	c6 05 4c a0 04 08 01 	movb   $0x1,0x804a04c
 80486ab:	c9                   	leave  
 80486ac:	c3                   	ret    
 80486ad:	8d 76 00             	lea    0x0(%esi),%esi
 80486b0:	f3 c3                	repz ret 
 80486b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80486b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080486c0 <frame_dummy>:
 80486c0:	55                   	push   %ebp
 80486c1:	89 e5                	mov    %esp,%ebp
 80486c3:	5d                   	pop    %ebp
 80486c4:	eb 8a                	jmp    8048650 <register_tm_clones>

080486c6 <win>:
 80486c6:	56                   	push   %esi
 80486c7:	53                   	push   %ebx
 80486c8:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 80486ce:	e8 2d ff ff ff       	call   8048600 <__x86.get_pc_thunk.bx>
 80486d3:	81 c3 2d 19 00 00    	add    $0x192d,%ebx
 80486d9:	8d 83 40 e9 ff ff    	lea    -0x16c0(%ebx),%eax
 80486df:	50                   	push   %eax
 80486e0:	8d 83 42 e9 ff ff    	lea    -0x16be(%ebx),%eax
 80486e6:	50                   	push   %eax
 80486e7:	e8 84 fe ff ff       	call   8048570 <fopen@plt>
 80486ec:	83 c4 0c             	add    $0xc,%esp
 80486ef:	50                   	push   %eax
 80486f0:	68 80 00 00 00       	push   $0x80
 80486f5:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80486f9:	56                   	push   %esi
 80486fa:	e8 e1 fd ff ff       	call   80484e0 <fgets@plt>
 80486ff:	89 34 24             	mov    %esi,(%esp)
 8048702:	e8 29 fe ff ff       	call   8048530 <puts@plt>
 8048707:	83 c4 04             	add    $0x4,%esp
 804870a:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048710:	ff 30                	pushl  (%eax)
 8048712:	e8 b9 fd ff ff       	call   80484d0 <fflush@plt>
 8048717:	81 c4 94 00 00 00    	add    $0x94,%esp
 804871d:	5b                   	pop    %ebx
 804871e:	5e                   	pop    %esi
 804871f:	c3                   	ret    

08048720 <read_canary>:
 8048720:	56                   	push   %esi
 8048721:	53                   	push   %ebx
 8048722:	83 ec 0c             	sub    $0xc,%esp
 8048725:	e8 d6 fe ff ff       	call   8048600 <__x86.get_pc_thunk.bx>
 804872a:	81 c3 d6 18 00 00    	add    $0x18d6,%ebx
 8048730:	8d 83 40 e9 ff ff    	lea    -0x16c0(%ebx),%eax
 8048736:	50                   	push   %eax
 8048737:	8d 83 42 e9 ff ff    	lea    -0x16be(%ebx),%eax
 804873d:	50                   	push   %eax
 804873e:	e8 2d fe ff ff       	call   8048570 <fopen@plt>
 8048743:	89 c6                	mov    %eax,%esi
 8048745:	50                   	push   %eax
 8048746:	6a 04                	push   $0x4
 8048748:	6a 01                	push   $0x1
 804874a:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)
 8048750:	e8 cb fd ff ff       	call   8048520 <fread@plt>
 8048755:	83 c4 14             	add    $0x14,%esp
 8048758:	56                   	push   %esi
 8048759:	e8 92 fd ff ff       	call   80484f0 <fclose@plt>
 804875e:	83 c4 14             	add    $0x14,%esp
 8048761:	5b                   	pop    %ebx
 8048762:	5e                   	pop    %esi
 8048763:	c3                   	ret    

08048764 <vuln>:
 8048764:	57                   	push   %edi
 8048765:	56                   	push   %esi
 8048766:	53                   	push   %ebx
 8048767:	81 ec 1c 01 00 00    	sub    $0x11c,%esp
 804876d:	e8 8e fe ff ff       	call   8048600 <__x86.get_pc_thunk.bx>
 8048772:	81 c3 8e 18 00 00    	add    $0x188e,%ebx
 8048778:	c7 c0 50 a0 04 08    	mov    $0x804a050,%eax
 804877e:	8b 00                	mov    (%eax),%eax
 8048780:	89 84 24 18 01 00 00 	mov    %eax,0x118(%esp)
 8048787:	8d 83 88 e9 ff ff    	lea    -0x1678(%ebx),%eax
 804878d:	50                   	push   %eax
 804878e:	e8 9d fd ff ff       	call   8048530 <puts@plt>
 8048793:	8d 74 24 1c          	lea    0x1c(%esp),%esi
 8048797:	8d bc 24 9c 00 00 00 	lea    0x9c(%esp),%edi
 804879e:	83 c4 10             	add    $0x10,%esp
 80487a1:	83 ec 04             	sub    $0x4,%esp
 80487a4:	6a 01                	push   $0x1
 80487a6:	56                   	push   %esi
 80487a7:	6a 00                	push   $0x0
 80487a9:	e8 12 fd ff ff       	call   80484c0 <read@plt>
 80487ae:	83 c4 10             	add    $0x10,%esp
 80487b1:	80 3e 0a             	cmpb   $0xa,(%esi)
 80487b4:	74 07                	je     80487bd <vuln+0x59>
 80487b6:	83 c6 01             	add    $0x1,%esi
 80487b9:	39 fe                	cmp    %edi,%esi
 80487bb:	75 e4                	jne    80487a1 <vuln+0x3d>
 80487bd:	83 ec 04             	sub    $0x4,%esp
 80487c0:	8d 44 24 0c          	lea    0xc(%esp),%eax
 80487c4:	50                   	push   %eax
 80487c5:	8d 83 4b e9 ff ff    	lea    -0x16b5(%ebx),%eax
 80487cb:	50                   	push   %eax
 80487cc:	8d 44 24 18          	lea    0x18(%esp),%eax
 80487d0:	50                   	push   %eax
 80487d1:	e8 8a fd ff ff       	call   8048560 <__isoc99_sscanf@plt>
 80487d6:	8d 83 4e e9 ff ff    	lea    -0x16b2(%ebx),%eax
 80487dc:	89 04 24             	mov    %eax,(%esp)
 80487df:	e8 4c fd ff ff       	call   8048530 <puts@plt>
 80487e4:	83 c4 04             	add    $0x4,%esp
 80487e7:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80487ed:	ff 30                	pushl  (%eax)
 80487ef:	e8 dc fc ff ff       	call   80484d0 <fflush@plt>
 80487f4:	83 c4 0c             	add    $0xc,%esp
 80487f7:	ff 74 24 0c          	pushl  0xc(%esp)
 80487fb:	8d 84 24 94 00 00 00 	lea    0x94(%esp),%eax
 8048802:	50                   	push   %eax
 8048803:	6a 00                	push   $0x0
 8048805:	e8 b6 fc ff ff       	call   80484c0 <read@plt>
 804880a:	83 c4 0c             	add    $0xc,%esp
 804880d:	6a 04                	push   $0x4
 804880f:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)
 8048815:	8d 84 24 18 01 00 00 	lea    0x118(%esp),%eax
 804881c:	50                   	push   %eax
 804881d:	e8 de fc ff ff       	call   8048500 <memcmp@plt>
 8048822:	83 c4 10             	add    $0x10,%esp
 8048825:	85 c0                	test   %eax,%eax
 8048827:	75 35                	jne    804885e <vuln+0xfa>
 8048829:	83 ec 0c             	sub    $0xc,%esp
 804882c:	8d 83 75 e9 ff ff    	lea    -0x168b(%ebx),%eax
 8048832:	50                   	push   %eax
 8048833:	e8 f8 fc ff ff       	call   8048530 <puts@plt>
 8048838:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 804883f:	e8 3c fd ff ff       	call   8048580 <putchar@plt>
 8048844:	83 c4 04             	add    $0x4,%esp
 8048847:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804884d:	ff 30                	pushl  (%eax)
 804884f:	e8 7c fc ff ff       	call   80484d0 <fflush@plt>
 8048854:	81 c4 20 01 00 00    	add    $0x120,%esp
 804885a:	5b                   	pop    %ebx
 804885b:	5e                   	pop    %esi
 804885c:	5f                   	pop    %edi
 804885d:	c3                   	ret    
 804885e:	83 ec 0c             	sub    $0xc,%esp
 8048861:	8d 83 64 e9 ff ff    	lea    -0x169c(%ebx),%eax
 8048867:	50                   	push   %eax
 8048868:	e8 c3 fc ff ff       	call   8048530 <puts@plt>
 804886d:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
 8048874:	e8 c7 fc ff ff       	call   8048540 <exit@plt>

08048879 <main>:
 8048879:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804887d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048880:	ff 71 fc             	pushl  -0x4(%ecx)
 8048883:	55                   	push   %ebp
 8048884:	89 e5                	mov    %esp,%ebp
 8048886:	53                   	push   %ebx
 8048887:	51                   	push   %ecx
 8048888:	e8 73 fd ff ff       	call   8048600 <__x86.get_pc_thunk.bx>
 804888d:	81 c3 73 17 00 00    	add    $0x1773,%ebx
 8048893:	e8 78 fc ff ff       	call   8048510 <getegid@plt>
 8048898:	83 ec 04             	sub    $0x4,%esp
 804889b:	50                   	push   %eax
 804889c:	50                   	push   %eax
 804889d:	50                   	push   %eax
 804889e:	e8 ed fc ff ff       	call   8048590 <setresgid@plt>
 80488a3:	e8 78 fe ff ff       	call   8048720 <read_canary>
 80488a8:	e8 b7 fe ff ff       	call   8048764 <vuln>
 80488ad:	83 c4 10             	add    $0x10,%esp
 80488b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80488b5:	8d 65 f8             	lea    -0x8(%ebp),%esp
 80488b8:	59                   	pop    %ecx
 80488b9:	5b                   	pop    %ebx
 80488ba:	5d                   	pop    %ebp
 80488bb:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80488be:	c3                   	ret    
 80488bf:	90                   	nop

080488c0 <__libc_csu_init>:
 80488c0:	55                   	push   %ebp
 80488c1:	57                   	push   %edi
 80488c2:	56                   	push   %esi
 80488c3:	53                   	push   %ebx
 80488c4:	e8 37 fd ff ff       	call   8048600 <__x86.get_pc_thunk.bx>
 80488c9:	81 c3 37 17 00 00    	add    $0x1737,%ebx
 80488cf:	83 ec 0c             	sub    $0xc,%esp
 80488d2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 80488d6:	8d b3 08 ff ff ff    	lea    -0xf8(%ebx),%esi
 80488dc:	e8 ab fb ff ff       	call   804848c <_init>
 80488e1:	8d 83 04 ff ff ff    	lea    -0xfc(%ebx),%eax
 80488e7:	29 c6                	sub    %eax,%esi
 80488e9:	c1 fe 02             	sar    $0x2,%esi
 80488ec:	85 f6                	test   %esi,%esi
 80488ee:	74 25                	je     8048915 <__libc_csu_init+0x55>
 80488f0:	31 ff                	xor    %edi,%edi
 80488f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80488f8:	83 ec 04             	sub    $0x4,%esp
 80488fb:	55                   	push   %ebp
 80488fc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048900:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048904:	ff 94 bb 04 ff ff ff 	call   *-0xfc(%ebx,%edi,4)
 804890b:	83 c7 01             	add    $0x1,%edi
 804890e:	83 c4 10             	add    $0x10,%esp
 8048911:	39 fe                	cmp    %edi,%esi
 8048913:	75 e3                	jne    80488f8 <__libc_csu_init+0x38>
 8048915:	83 c4 0c             	add    $0xc,%esp
 8048918:	5b                   	pop    %ebx
 8048919:	5e                   	pop    %esi
 804891a:	5f                   	pop    %edi
 804891b:	5d                   	pop    %ebp
 804891c:	c3                   	ret    
 804891d:	8d 76 00             	lea    0x0(%esi),%esi

08048920 <__libc_csu_fini>:
 8048920:	f3 c3                	repz ret 

Disassembly of section .fini:

08048924 <_fini>:
 8048924:	53                   	push   %ebx
 8048925:	83 ec 08             	sub    $0x8,%esp
 8048928:	e8 d3 fc ff ff       	call   8048600 <__x86.get_pc_thunk.bx>
 804892d:	81 c3 d3 16 00 00    	add    $0x16d3,%ebx
 8048933:	83 c4 08             	add    $0x8,%esp
 8048936:	5b                   	pop    %ebx
 8048937:	c3                   	ret    

Disassembly of section .rodata:

08048938 <_fp_hw>:
 8048938:	03 00                	add    (%eax),%eax
	...

0804893c <_IO_stdin_used>:
 804893c:	01 00                	add    %eax,(%eax)
 804893e:	02 00                	add    (%eax),%al
 8048940:	72 00                	jb     8048942 <_IO_stdin_used+0x6>
 8048942:	66 6c                	data16 insb (%dx),%es:(%edi)
 8048944:	61                   	popa   
 8048945:	67 2e 74 78          	addr16 je,pn 80489c1 <_IO_stdin_used+0x85>
 8048949:	74 00                	je     804894b <_IO_stdin_used+0xf>
 804894b:	25 64 00 4e 6f       	and    $0x6f4e0064,%eax
 8048950:	77 20                	ja     8048972 <_IO_stdin_used+0x36>
 8048952:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048954:	74 65                	je     80489bb <_IO_stdin_used+0x7f>
 8048956:	72 20                	jb     8048978 <_IO_stdin_used+0x3c>
 8048958:	74 68                	je     80489c2 <_IO_stdin_used+0x86>
 804895a:	65 20 73 74          	and    %dh,%gs:0x74(%ebx)
 804895e:	72 69                	jb     80489c9 <_IO_stdin_used+0x8d>
 8048960:	6e                   	outsb  %ds:(%esi),(%dx)
 8048961:	67 0a 00             	or     (%bx,%si),%al
 8048964:	68 61 63 6b 65       	push   $0x656b6361
 8048969:	72 20                	jb     804898b <_IO_stdin_used+0x4f>
 804896b:	64 65 74 65          	fs gs je 80489d4 <__GNU_EH_FRAME_HDR+0x4>
 804896f:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 8048973:	21 00                	and    %eax,(%eax)
 8048975:	59                   	pop    %ecx
 8048976:	6f                   	outsl  %ds:(%esi),(%dx)
 8048977:	75 20                	jne    8048999 <_IO_stdin_used+0x5d>
 8048979:	73 61                	jae    80489dc <__GNU_EH_FRAME_HDR+0xc>
 804897b:	69 64 20 73 6f 6d 65 	imul   $0x74656d6f,0x73(%eax,%eiz,1),%esp
 8048982:	74 
 8048983:	68 69 6e 67 00       	push   $0x676e69
 8048988:	47                   	inc    %edi
 8048989:	6f                   	outsl  %ds:(%esi),(%dx)
 804898a:	20 61 68             	and    %ah,0x68(%ecx)
 804898d:	65 61                	gs popa 
 804898f:	64 2c 20             	fs sub $0x20,%al
 8048992:	74 72                	je     8048a06 <__GNU_EH_FRAME_HDR+0x36>
 8048994:	79 20                	jns    80489b6 <_IO_stdin_used+0x7a>
 8048996:	74 6f                	je     8048a07 <__GNU_EH_FRAME_HDR+0x37>
 8048998:	20 6f 76             	and    %ch,0x76(%edi)
 804899b:	65 72 66             	gs jb  8048a04 <__GNU_EH_FRAME_HDR+0x34>
 804899e:	6c                   	insb   (%dx),%es:(%edi)
 804899f:	6f                   	outsl  %ds:(%esi),(%dx)
 80489a0:	77 20                	ja     80489c2 <_IO_stdin_used+0x86>
 80489a2:	6d                   	insl   (%dx),%es:(%edi)
 80489a3:	65 21 20             	and    %esp,%gs:(%eax)
 80489a6:	49                   	dec    %ecx
 80489a7:	27                   	daa    
 80489a8:	6c                   	insb   (%dx),%es:(%edi)
 80489a9:	6c                   	insb   (%dx),%es:(%edi)
 80489aa:	20 6c 65 74          	and    %ch,0x74(%ebp,%eiz,2)
 80489ae:	20 79 6f             	and    %bh,0x6f(%ecx)
 80489b1:	75 20                	jne    80489d3 <__GNU_EH_FRAME_HDR+0x3>
 80489b3:	70 69                	jo     8048a1e <__GNU_EH_FRAME_HDR+0x4e>
 80489b5:	63 6b 20             	arpl   %bp,0x20(%ebx)
 80489b8:	68 6f 77 20 6d       	push   $0x6d20776f
 80489bd:	61                   	popa   
 80489be:	6e                   	outsb  %ds:(%esi),(%dx)
 80489bf:	79 20                	jns    80489e1 <__GNU_EH_FRAME_HDR+0x11>
 80489c1:	62 79 74             	bound  %edi,0x74(%ecx)
 80489c4:	65 73 20             	gs jae 80489e7 <__GNU_EH_FRAME_HDR+0x17>
 80489c7:	74 6f                	je     8048a38 <__GNU_EH_FRAME_HDR+0x68>
 80489c9:	20 72 65             	and    %dh,0x65(%edx)
 80489cc:	61                   	popa   
 80489cd:	64 00 00             	add    %al,%fs:(%eax)

Disassembly of section .eh_frame_hdr:

080489d0 <__GNU_EH_FRAME_HDR>:
 80489d0:	01 1b                	add    %ebx,(%ebx)
 80489d2:	03 3b                	add    (%ebx),%edi
 80489d4:	50                   	push   %eax
 80489d5:	00 00                	add    %al,(%eax)
 80489d7:	00 09                	add    %cl,(%ecx)
 80489d9:	00 00                	add    %al,(%eax)
 80489db:	00 e0                	add    %ah,%al
 80489dd:	fa                   	cli    
 80489de:	ff                   	(bad)  
 80489df:	ff 80 00 00 00 d0    	incl   -0x30000000(%eax)
 80489e5:	fb                   	sti    
 80489e6:	ff                   	(bad)  
 80489e7:	ff a4 00 00 00 20 fc 	jmp    *-0x3e00000(%eax,%eax,1)
 80489ee:	ff                   	(bad)  
 80489ef:	ff 6c 00 00          	ljmp   *0x0(%eax,%eax,1)
 80489f3:	00 f6                	add    %dh,%dh
 80489f5:	fc                   	cld    
 80489f6:	ff                   	(bad)  
 80489f7:	ff                   	(bad)  
 80489f8:	b8 00 00 00 50       	mov    $0x50000000,%eax
 80489fd:	fd                   	std    
 80489fe:	ff                   	(bad)  
 80489ff:	ff 04 01             	incl   (%ecx,%eax,1)
 8048a02:	00 00                	add    %al,(%eax)
 8048a04:	94                   	xchg   %eax,%esp
 8048a05:	fd                   	std    
 8048a06:	ff                   	(bad)  
 8048a07:	ff 48 01             	decl   0x1(%eax)
 8048a0a:	00 00                	add    %al,(%eax)
 8048a0c:	a9 fe ff ff f8       	test   $0xf8fffffe,%eax
 8048a11:	01 00                	add    %eax,(%eax)
 8048a13:	00 f0                	add    %dh,%al
 8048a15:	fe                   	(bad)  
 8048a16:	ff                   	(bad)  
 8048a17:	ff 2c 02             	ljmp   *(%edx,%eax,1)
 8048a1a:	00 00                	add    %al,(%eax)
 8048a1c:	50                   	push   %eax
 8048a1d:	ff                   	(bad)  
 8048a1e:	ff                   	(bad)  
 8048a1f:	ff                   	(bad)  
 8048a20:	78 02                	js     8048a24 <__GNU_EH_FRAME_HDR+0x54>
	...

Disassembly of section .eh_frame:

08048a24 <__FRAME_END__-0x238>:
 8048a24:	14 00                	adc    $0x0,%al
 8048a26:	00 00                	add    %al,(%eax)
 8048a28:	00 00                	add    %al,(%eax)
 8048a2a:	00 00                	add    %al,(%eax)
 8048a2c:	01 7a 52             	add    %edi,0x52(%edx)
 8048a2f:	00 01                	add    %al,(%ecx)
 8048a31:	7c 08                	jl     8048a3b <__GNU_EH_FRAME_HDR+0x6b>
 8048a33:	01 1b                	add    %ebx,(%ebx)
 8048a35:	0c 04                	or     $0x4,%al
 8048a37:	04 88                	add    $0x88,%al
 8048a39:	01 00                	add    %eax,(%eax)
 8048a3b:	00 10                	add    %dl,(%eax)
 8048a3d:	00 00                	add    %al,(%eax)
 8048a3f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048a42:	00 00                	add    %al,(%eax)
 8048a44:	ac                   	lods   %ds:(%esi),%al
 8048a45:	fb                   	sti    
 8048a46:	ff                   	(bad)  
 8048a47:	ff 02                	incl   (%edx)
 8048a49:	00 00                	add    %al,(%eax)
 8048a4b:	00 00                	add    %al,(%eax)
 8048a4d:	00 00                	add    %al,(%eax)
 8048a4f:	00 20                	add    %ah,(%eax)
 8048a51:	00 00                	add    %al,(%eax)
 8048a53:	00 30                	add    %dh,(%eax)
 8048a55:	00 00                	add    %al,(%eax)
 8048a57:	00 58 fa             	add    %bl,-0x6(%eax)
 8048a5a:	ff                   	(bad)  
 8048a5b:	ff f0                	push   %eax
 8048a5d:	00 00                	add    %al,(%eax)
 8048a5f:	00 00                	add    %al,(%eax)
 8048a61:	0e                   	push   %cs
 8048a62:	08 46 0e             	or     %al,0xe(%esi)
 8048a65:	0c 4a                	or     $0x4a,%al
 8048a67:	0f 0b                	ud2    
 8048a69:	74 04                	je     8048a6f <__GNU_EH_FRAME_HDR+0x9f>
 8048a6b:	78 00                	js     8048a6d <__GNU_EH_FRAME_HDR+0x9d>
 8048a6d:	3f                   	aas    
 8048a6e:	1a 3b                	sbb    (%ebx),%bh
 8048a70:	2a 32                	sub    (%edx),%dh
 8048a72:	24 22                	and    $0x22,%al
 8048a74:	10 00                	adc    %al,(%eax)
 8048a76:	00 00                	add    %al,(%eax)
 8048a78:	54                   	push   %esp
 8048a79:	00 00                	add    %al,(%eax)
 8048a7b:	00 24 fb             	add    %ah,(%ebx,%edi,8)
 8048a7e:	ff                   	(bad)  
 8048a7f:	ff 08                	decl   (%eax)
 8048a81:	00 00                	add    %al,(%eax)
 8048a83:	00 00                	add    %al,(%eax)
 8048a85:	00 00                	add    %al,(%eax)
 8048a87:	00 48 00             	add    %cl,0x0(%eax)
 8048a8a:	00 00                	add    %al,(%eax)
 8048a8c:	68 00 00 00 36       	push   $0x36000000
 8048a91:	fc                   	cld    
 8048a92:	ff                   	(bad)  
 8048a93:	ff 5a 00             	lcall  *0x0(%edx)
 8048a96:	00 00                	add    %al,(%eax)
 8048a98:	00 41 0e             	add    %al,0xe(%ecx)
 8048a9b:	08 86 02 41 0e 0c    	or     %al,0xc0e4102(%esi)
 8048aa1:	83 03 46             	addl   $0x46,(%ebx)
 8048aa4:	0e                   	push   %cs
 8048aa5:	98                   	cwtl   
 8048aa6:	01 52 0e             	add    %edx,0xe(%edx)
 8048aa9:	9c                   	pushf  
 8048aaa:	01 47 0e             	add    %eax,0xe(%edi)
 8048aad:	a0 01 48 0e 94       	mov    0x940e4801,%al
 8048ab2:	01 41 0e             	add    %eax,0xe(%ecx)
 8048ab5:	98                   	cwtl   
 8048ab6:	01 45 0e             	add    %eax,0xe(%ebp)
 8048ab9:	9c                   	pushf  
 8048aba:	01 45 0e             	add    %eax,0xe(%ebp)
 8048abd:	a0 01 50 0e 9c       	mov    0x9c0e5001,%al
 8048ac2:	01 48 0e             	add    %ecx,0xe(%eax)
 8048ac5:	a0 01 4b 0e 0c       	mov    0xc0e4b01,%al
 8048aca:	41                   	inc    %ecx
 8048acb:	c3                   	ret    
 8048acc:	0e                   	push   %cs
 8048acd:	08 41 c6             	or     %al,-0x3a(%ecx)
 8048ad0:	0e                   	push   %cs
 8048ad1:	04 00                	add    $0x0,%al
 8048ad3:	00 40 00             	add    %al,0x0(%eax)
 8048ad6:	00 00                	add    %al,(%eax)
 8048ad8:	b4 00                	mov    $0x0,%ah
 8048ada:	00 00                	add    %al,(%eax)
 8048adc:	44                   	inc    %esp
 8048add:	fc                   	cld    
 8048ade:	ff                   	(bad)  
 8048adf:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 8048ae3:	00 00                	add    %al,(%eax)
 8048ae5:	41                   	inc    %ecx
 8048ae6:	0e                   	push   %cs
 8048ae7:	08 86 02 41 0e 0c    	or     %al,0xc0e4102(%esi)
 8048aed:	83 03 43             	addl   $0x43,(%ebx)
 8048af0:	0e                   	push   %cs
 8048af1:	18 52 0e             	sbb    %dl,0xe(%edx)
 8048af4:	1c 47                	sbb    $0x47,%al
 8048af6:	0e                   	push   %cs
 8048af7:	20 48 0e             	and    %cl,0xe(%eax)
 8048afa:	24 42                	and    $0x42,%al
 8048afc:	0e                   	push   %cs
 8048afd:	28 42 0e             	sub    %al,0xe(%edx)
 8048b00:	2c 46                	sub    $0x46,%al
 8048b02:	0e                   	push   %cs
 8048b03:	30 48 0e             	xor    %cl,0xe(%eax)
 8048b06:	1c 41                	sbb    $0x41,%al
 8048b08:	0e                   	push   %cs
 8048b09:	20 48 0e             	and    %cl,0xe(%eax)
 8048b0c:	0c 41                	or     $0x41,%al
 8048b0e:	c3                   	ret    
 8048b0f:	0e                   	push   %cs
 8048b10:	08 41 c6             	or     %al,-0x3a(%ecx)
 8048b13:	0e                   	push   %cs
 8048b14:	04 00                	add    $0x0,%al
 8048b16:	00 00                	add    %al,(%eax)
 8048b18:	ac                   	lods   %ds:(%esi),%al
 8048b19:	00 00                	add    %al,(%eax)
 8048b1b:	00 f8                	add    %bh,%al
 8048b1d:	00 00                	add    %al,(%eax)
 8048b1f:	00 44 fc ff          	add    %al,-0x1(%esp,%edi,8)
 8048b23:	ff 15 01 00 00 00    	call   *0x1
 8048b29:	41                   	inc    %ecx
 8048b2a:	0e                   	push   %cs
 8048b2b:	08 87 02 41 0e 0c    	or     %al,0xc0e4102(%edi)
 8048b31:	86 03                	xchg   %al,(%ebx)
 8048b33:	41                   	inc    %ecx
 8048b34:	0e                   	push   %cs
 8048b35:	10 83 04 46 0e ac    	adc    %al,-0x53f1b9fc(%ebx)
 8048b3b:	02 61 0e             	add    0xe(%ecx),%ah
 8048b3e:	b0 02                	mov    $0x2,%al
 8048b40:	53                   	push   %ebx
 8048b41:	0e                   	push   %cs
 8048b42:	a0 02 43 0e a4       	mov    0xa40e4302,%al
 8048b47:	02 42 0e             	add    0xe(%edx),%al
 8048b4a:	a8 02                	test   $0x2,%al
 8048b4c:	41                   	inc    %ecx
 8048b4d:	0e                   	push   %cs
 8048b4e:	ac                   	lods   %ds:(%esi),%al
 8048b4f:	02 42 0e             	add    0xe(%edx),%al
 8048b52:	b0 02                	mov    $0x2,%al
 8048b54:	48                   	dec    %eax
 8048b55:	0e                   	push   %cs
 8048b56:	a0 02 4f 0e a4       	mov    0xa40e4f02,%al
 8048b5b:	02 45 0e             	add    0xe(%ebp),%al
 8048b5e:	a8 02                	test   $0x2,%al
 8048b60:	47                   	inc    %edi
 8048b61:	0e                   	push   %cs
 8048b62:	ac                   	lods   %ds:(%esi),%al
 8048b63:	02 45 0e             	add    0xe(%ebp),%al
 8048b66:	b0 02                	mov    $0x2,%al
 8048b68:	56                   	push   %esi
 8048b69:	0e                   	push   %cs
 8048b6a:	ac                   	lods   %ds:(%esi),%al
 8048b6b:	02 48 0e             	add    0xe(%eax),%cl
 8048b6e:	b0 02                	mov    $0x2,%al
 8048b70:	48                   	dec    %eax
 8048b71:	0e                   	push   %cs
 8048b72:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8048b73:	02 44 0e a8          	add    -0x58(%esi,%ecx,1),%al
 8048b77:	02 48 0e             	add    0xe(%eax),%cl
 8048b7a:	ac                   	lods   %ds:(%esi),%al
 8048b7b:	02 42 0e             	add    0xe(%edx),%al
 8048b7e:	b0 02                	mov    $0x2,%al
 8048b80:	48                   	dec    %eax
 8048b81:	0e                   	push   %cs
 8048b82:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8048b83:	02 42 0e             	add    0xe(%edx),%al
 8048b86:	a8 02                	test   $0x2,%al
 8048b88:	46                   	inc    %esi
 8048b89:	0e                   	push   %cs
 8048b8a:	ac                   	lods   %ds:(%esi),%al
 8048b8b:	02 48 0e             	add    0xe(%eax),%cl
 8048b8e:	b0 02                	mov    $0x2,%al
 8048b90:	48                   	dec    %eax
 8048b91:	0e                   	push   %cs
 8048b92:	a0 02 47 0e ac       	mov    0xac0e4702,%al
 8048b97:	02 47 0e             	add    0xe(%edi),%al
 8048b9a:	b0 02                	mov    $0x2,%al
 8048b9c:	54                   	push   %esp
 8048b9d:	0e                   	push   %cs
 8048b9e:	ac                   	lods   %ds:(%esi),%al
 8048b9f:	02 48 0e             	add    0xe(%eax),%cl
 8048ba2:	b0 02                	mov    $0x2,%al
 8048ba4:	4b                   	dec    %ebx
 8048ba5:	0e                   	push   %cs
 8048ba6:	10 41 c3             	adc    %al,-0x3d(%ecx)
 8048ba9:	0e                   	push   %cs
 8048baa:	0c 41                	or     $0x41,%al
 8048bac:	c6                   	(bad)  
 8048bad:	0e                   	push   %cs
 8048bae:	08 41 c7             	or     %al,-0x39(%ecx)
 8048bb1:	0e                   	push   %cs
 8048bb2:	04 41                	add    $0x41,%al
 8048bb4:	0e                   	push   %cs
 8048bb5:	a0 02 83 04 86       	mov    0x86048302,%al
 8048bba:	03 87 02 43 0e ac    	add    -0x53f1bcfe(%edi),%eax
 8048bc0:	02 47 0e             	add    0xe(%edi),%al
 8048bc3:	b0 02                	mov    $0x2,%al
 8048bc5:	00 00                	add    %al,(%eax)
 8048bc7:	00 30                	add    %dh,(%eax)
 8048bc9:	00 00                	add    %al,(%eax)
 8048bcb:	00 a8 01 00 00 a9    	add    %ch,-0x56ffffff(%eax)
 8048bd1:	fc                   	cld    
 8048bd2:	ff                   	(bad)  
 8048bd3:	ff 46 00             	incl   0x0(%esi)
 8048bd6:	00 00                	add    %al,(%eax)
 8048bd8:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 8048bdc:	00 47 10             	add    %al,0x10(%edi)
 8048bdf:	05 02 75 00 44       	add    $0x44007502,%eax
 8048be4:	0f 03 75 78          	lsl    0x78(%ebp),%esi
 8048be8:	06                   	push   %es
 8048be9:	10 03                	adc    %al,(%ebx)
 8048beb:	02 75 7c             	add    0x7c(%ebp),%dh
 8048bee:	71 c1                	jno    8048bb1 <__GNU_EH_FRAME_HDR+0x1e1>
 8048bf0:	0c 01                	or     $0x1,%al
 8048bf2:	00 41 c3             	add    %al,-0x3d(%ecx)
 8048bf5:	41                   	inc    %ecx
 8048bf6:	c5 43 0c             	lds    0xc(%ebx),%eax
 8048bf9:	04 04                	add    $0x4,%al
 8048bfb:	00 48 00             	add    %cl,0x0(%eax)
 8048bfe:	00 00                	add    %al,(%eax)
 8048c00:	dc 01                	faddl  (%ecx)
 8048c02:	00 00                	add    %al,(%eax)
 8048c04:	bc fc ff ff 5d       	mov    $0x5dfffffc,%esp
 8048c09:	00 00                	add    %al,(%eax)
 8048c0b:	00 00                	add    %al,(%eax)
 8048c0d:	41                   	inc    %ecx
 8048c0e:	0e                   	push   %cs
 8048c0f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048c15:	87 03                	xchg   %eax,(%ebx)
 8048c17:	41                   	inc    %ecx
 8048c18:	0e                   	push   %cs
 8048c19:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048c1f:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 8048c26:	24 41                	and    $0x41,%al
 8048c28:	0e                   	push   %cs
 8048c29:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048c2d:	44                   	inc    %esp
 8048c2e:	0e                   	push   %cs
 8048c2f:	30 4d 0e             	xor    %cl,0xe(%ebp)
 8048c32:	20 47 0e             	and    %al,0xe(%edi)
 8048c35:	14 41                	adc    $0x41,%al
 8048c37:	c3                   	ret    
 8048c38:	0e                   	push   %cs
 8048c39:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048c3c:	0e                   	push   %cs
 8048c3d:	0c 41                	or     $0x41,%al
 8048c3f:	c7                   	(bad)  
 8048c40:	0e                   	push   %cs
 8048c41:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048c44:	0e                   	push   %cs
 8048c45:	04 00                	add    $0x0,%al
 8048c47:	00 10                	add    %dl,(%eax)
 8048c49:	00 00                	add    %al,(%eax)
 8048c4b:	00 28                	add    %ch,(%eax)
 8048c4d:	02 00                	add    (%eax),%al
 8048c4f:	00 d0                	add    %dl,%al
 8048c51:	fc                   	cld    
 8048c52:	ff                   	(bad)  
 8048c53:	ff 02                	incl   (%edx)
 8048c55:	00 00                	add    %al,(%eax)
 8048c57:	00 00                	add    %al,(%eax)
 8048c59:	00 00                	add    %al,(%eax)
	...

08048c5c <__FRAME_END__>:
 8048c5c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f04 <__frame_dummy_init_array_entry>:
 8049f04:	c0                   	.byte 0xc0
 8049f05:	86 04 08             	xchg   %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f08 <__do_global_dtors_aux_fini_array_entry>:
 8049f08:	90                   	nop
 8049f09:	86 04 08             	xchg   %al,(%eax,%ecx,1)

Disassembly of section .dynamic:

08049f0c <_DYNAMIC>:
 8049f0c:	01 00                	add    %eax,(%eax)
 8049f0e:	00 00                	add    %al,(%eax)
 8049f10:	01 00                	add    %eax,(%eax)
 8049f12:	00 00                	add    %al,(%eax)
 8049f14:	0c 00                	or     $0x0,%al
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	8c 84 04 08 0d 00 00 	mov    %es,0xd08(%esp,%eax,1)
 8049f1f:	00 24 89             	add    %ah,(%ecx,%ecx,4)
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	19 00                	sbb    %eax,(%eax)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	04 9f                	add    $0x9f,%al
 8049f2a:	04 08                	add    $0x8,%al
 8049f2c:	1b 00                	sbb    (%eax),%eax
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	04 00                	add    $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	1a 00                	sbb    (%eax),%al
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	08 9f 04 08 1c 00    	or     %bl,0x1c0804(%edi)
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	04 00                	add    $0x0,%al
 8049f42:	00 00                	add    %al,(%eax)
 8049f44:	f5                   	cmc    
 8049f45:	fe                   	(bad)  
 8049f46:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f49:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f50:	ec                   	in     (%dx),%al
 8049f51:	82                   	(bad)  
 8049f52:	04 08                	add    $0x8,%al
 8049f54:	06                   	push   %es
 8049f55:	00 00                	add    %al,(%eax)
 8049f57:	00 cc                	add    %cl,%ah
 8049f59:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f60:	bb 00 00 00 0b       	mov    $0xb000000,%ebx
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 10                	add    %dl,(%eax)
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 15 00 00 00 00    	add    %dl,0x0
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 03                	add    %al,(%ebx)
 8049f75:	00 00                	add    %al,(%eax)
 8049f77:	00 00                	add    %al,(%eax)
 8049f79:	a0 04 08 02 00       	mov    0x20804,%al
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	70 00                	jo     8049f82 <_DYNAMIC+0x76>
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	14 00                	adc    $0x0,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	11 00                	adc    %eax,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	17                   	pop    %ss
 8049f8d:	00 00                	add    %al,(%eax)
 8049f8f:	00 1c 84             	add    %bl,(%esp,%eax,4)
 8049f92:	04 08                	add    $0x8,%al
 8049f94:	11 00                	adc    %eax,(%eax)
 8049f96:	00 00                	add    %al,(%eax)
 8049f98:	0c 84                	or     $0x84,%al
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	12 00                	adc    (%eax),%al
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	10 00                	adc    %al,(%eax)
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	13 00                	adc    (%eax),%eax
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	fe                   	(bad)  
 8049fad:	ff                   	(bad)  
 8049fae:	ff 6f cc             	ljmp   *-0x34(%edi)
 8049fb1:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb9:	00 00                	add    %al,(%eax)
 8049fbb:	00 f0                	add    %dh,%al
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f a8             	ljmp   *-0x58(%edi)
 8049fc1:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ff4 <.got>:
 8049ff4:	50                   	push   %eax
 8049ff5:	a0 04 08 00 00       	mov    0x804,%al
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	0c 9f                	or     $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	c6 84 04 08 d6 84 04 	movb   $0x8,0x484d608(%esp,%eax,1)
 804a013:	08 
 804a014:	e6 84                	out    %al,$0x84
 804a016:	04 08                	add    $0x8,%al
 804a018:	f6 84 04 08 06 85 04 	testb  $0x8,0x4850608(%esp,%eax,1)
 804a01f:	08 
 804a020:	16                   	push   %ss
 804a021:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804a024:	26 85 04 08          	test   %eax,%es:(%eax,%ecx,1)
 804a028:	36 85 04 08          	test   %eax,%ss:(%eax,%ecx,1)
 804a02c:	46                   	inc    %esi
 804a02d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804a030:	56                   	push   %esi
 804a031:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804a034:	66 85 04 08          	test   %ax,(%eax,%ecx,1)
 804a038:	76 85                	jbe    8049fbf <_DYNAMIC+0xb3>
 804a03a:	04 08                	add    $0x8,%al
 804a03c:	86 85 04 08 96 85    	xchg   %al,-0x7a69f7fc(%ebp)
 804a042:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a044 <__data_start>:
 804a044:	00 00                	add    %al,(%eax)
	...

0804a048 <__dso_handle>:
 804a048:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a04c <__bss_start>:
 804a04c:	00 00                	add    %al,(%eax)
	...

0804a050 <global_canary>:
 804a050:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048414>
   a:	74 75                	je     81 <_init-0x804840b>
   c:	20 37                	and    %dh,(%edi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x8048414>
  16:	75 6e                	jne    86 <_init-0x8048406>
  18:	74 75                	je     8f <_init-0x80483fd>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	38 2e                	cmp    %ch,(%esi)
  1f:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  22:	20 37                	and    %dh,(%edi)
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    %al,%cs:(%eax)
